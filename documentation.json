{
    "pipes": [
        {
            "name": "ImagePipe",
            "id": "pipe-ImagePipe-a994c959c45c429e065b8b5d8109b86fa157837faaae445b5b7e202ca7959f57a7516d85172e40078fe6fb314e8563abbff9c223e9525c1e663a7ed953927f27",
            "file": "src/app/pipes/image.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "image",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst base_url = environment.base_url;\r\n@Pipe({\r\n  name: 'image',\r\n})\r\nexport class ImagePipe implements PipeTransform {\r\n  transform(img: string, type: 'users' | 'doctors' | 'hospitals'): string {\r\n    if (!img) {\r\n      // console.log(this.img);\r\n      return `${base_url}/uploads/users/no-image`;\r\n    } else if (img.includes('https')) {\r\n      return img;\r\n    } else if (img) {\r\n      return `${base_url}/uploads/${type}/${img}`;\r\n    } else {\r\n      return `${base_url}/uploads/users/no-image`;\r\n    }\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "_DoctorUser",
            "id": "interface-_DoctorUser-81614d49af840c575e451b155d61ffab5118490e1517ed715efdad96ef9e0518c553472b966ace7142a8c08ac6dd4fc990bbf88fb79e2209d090f77ac2fdf6a4",
            "file": "src/app/models/doctor.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Hospital } from './hospital.model';\r\n\r\ninterface _DoctorUser {\r\n  _id: string;\r\n  name: string;\r\n  img?: string;\r\n}\r\nexport class Doctor {\r\n  constructor(\r\n    public name: string | any,\r\n    public _id?: string | '',\r\n    public img?: string | any,\r\n    public hospital?: Hospital,\r\n    public user?: _DoctorUser\r\n  ) {}\r\n}\r\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "_HospitalUser",
            "id": "interface-_HospitalUser-d0cec433bc69a87f3abf1758ab1db98f4e0c19ce9d1326fadfced61602d62922e17444c705eb0cf2916b4d1016d2301111399095018fd7eb6255316904b33d84",
            "file": "src/app/models/hospital.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface _HospitalUser {\r\n  _id: string;\r\n  name: string;\r\n  img?: string;\r\n}\r\nexport class Hospital {\r\n  constructor(\r\n    public name: string,\r\n    public _id?: string | '',\r\n    public img?: string | any,\r\n    public user?: _HospitalUser\r\n  ) {}\r\n}\r\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "LoadUser",
            "id": "interface-LoadUser-d17f9b907b0c9225de70f7fcdf7e5e0f56494ac226eb35336f12e17f400195bdd771c79e93ab543c523955f8fe2e79e160241120e3719426cbc36eed69f63713",
            "file": "src/app/interfaces/load-users.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from '../models/user.model';\r\n\r\nexport interface LoadUser {\r\n  total: number;\r\n  user: User[];\r\n}\r\n",
            "properties": [
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "LoginForm",
            "id": "interface-LoginForm-9d671580735aefd582dbd1b41e3cdb15f1285ec1be62fbfc58ee92650e55def8935afacfc073294fa613e7b61780461f4741e56154e31b17a6a7ebc39968bea6",
            "file": "src/app/interfaces/login-form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LoginForm {\r\n    email: string;\r\n    password: string;\r\n    remember: boolean;\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "remember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "RegisterForm",
            "id": "interface-RegisterForm-3696baae10ae31d485bd575ab8ced1006467fe3f25eaf67a176311deaf03a6fe920eedd0e558e0363c3466156a092bb67b42abfa1eb7b80945545d61f4e13e28",
            "file": "src/app/interfaces/register-form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RegisterForm {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  password2: string;\r\n  terms: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "password2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "terms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "DoctorService",
            "id": "injectable-DoctorService-77504d0f4dc972f9dea8d1262974c0dbd006777753b8769444ff0806057425d8874b14ca21f61c0f10db3a584ce56cda3fdbf66f0f3221c944037ef55069d9eb",
            "file": "src/app/services/doctor.service.ts",
            "properties": [
                {
                    "name": "doctor",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Doctor[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hospitals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createDoctor",
                    "args": [
                        {
                            "name": "doctor",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "doctor",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteDoctor",
                    "args": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDoctorById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Doctor>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadDoctor",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Doctor[]>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDoctor",
                    "args": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Doctor } from '../models/doctor.model';\r\nimport { Hospital } from '../models/hospital.model';\r\nconst base_url = environment.base_url;\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DoctorService {\r\n  public doctor: Doctor[] = [];\r\n  public hospitals: Hospital[] = [];\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  get token(): string {\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n\r\n  get headers() {\r\n    return {\r\n      headers: {\r\n        'x-token': this.token,\r\n      },\r\n    };\r\n  }\r\n\r\n  // .pipe(\r\n  //     map((resp) => {\r\n  //       const hos = resp.user.map(\r\n  //         (user) =>\r\n  //           new User(\r\n  //             user.name,\r\n  //             user.email,\r\n  //             user.img,\r\n  //             '',\r\n  //             user.google,\r\n  //             user.role,\r\n  //             user.uid\r\n  //           )\r\n  //       );\r\n  //       return {\r\n  //         total: resp.total,\r\n  //         user,\r\n\r\n  loadDoctor(): Observable<Doctor[]> {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/doctors`; //?since=${since}`;\r\n    return this.http\r\n      .get<{ ok: boolean; doctors: Doctor[] }>(url, this.headers)\r\n      .pipe(map((res: { ok: boolean; doctors: Doctor[] }) => res.doctors));\r\n  }\r\n  getDoctorById(id: string): Observable<Doctor> {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/doctors/${id}`; //?since=${since}`;\r\n    return this.http\r\n      .get<{ ok: boolean; doctor: Doctor }>(url, this.headers)\r\n      .pipe(map((res: { ok: boolean; doctor: Doctor }) => res.doctor));\r\n  }\r\n  createDoctor(doctor: { name: string; hospital: string }) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/doctors`; //?since=${since}`;\r\n    return this.http.post(url, doctor, this.headers);\r\n  }\r\n  updateDoctor(doctor: Doctor) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/doctors/${doctor._id}`; //?since=${since}`;\r\n    return this.http.put(url, doctor, this.headers);\r\n  }\r\n  deleteDoctor(_id: string) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/doctors/${_id}`; //?since=${since}`;\r\n    return this.http.delete(url, this.headers);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "token": {
                    "name": "token",
                    "getSignature": {
                        "name": "token",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                },
                "headers": {
                    "name": "headers",
                    "getSignature": {
                        "name": "headers",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "FileUploadService",
            "id": "injectable-FileUploadService-999f76fa3aa69fef18b297e4013010adf0247f5b375039de7c9ff523f51d51e1b8c21a33384f26d3a7a164ef6c84f67caf7d1ef672293d864b71db8058f1b4ce",
            "file": "src/app/services/file-upload.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "updatePhoto",
                    "args": [
                        {
                            "name": "file",
                            "type": "File | any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string | any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File | any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string | any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nconst base_url = environment.base_url;\r\n// const httpOptions = {\r\n//   // headers: new HttpHeaders({\r\n//   //   // public user : User;\r\n//   //   'Content-Type': 'application/json',\r\n//   //   'Authorization'\r\n//   // }),\r\n// };\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileUploadService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async updatePhoto(\r\n    file: File | any,\r\n    type: 'users' | 'doctors' | 'hospitals',\r\n    id: string | any\r\n  ) {\r\n    try {\r\n      const url = `${base_url}/uploads/${type}/${id}`;\r\n\r\n      const formData = new FormData();\r\n      // // this.userObj = new User('', '', file.toString(), '', false, '', '');\r\n\r\n      formData.append('img', file);\r\n      console.log(file);\r\n      // // User = new User();\r\n\r\n      const resp = await fetch(url, {\r\n        method: 'PUT',\r\n\r\n        headers: {\r\n          'x-token': localStorage.getItem('token') || '',\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      // console.log(resp.body);\r\n\r\n      // debugger;\r\n      const data = await resp.json();\r\n      // console.log(data);\r\n      // console.log(data);\r\n      if (data.ok) {\r\n        return data.fileName;\r\n      } else {\r\n        console.log(data.msg);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HospitalService",
            "id": "injectable-HospitalService-78dd160e834ad2058fae84f86e037ce8083a2fdd55b48821323a6bb159c3c8db70ad9c9d5053ecac63fa4fad6280c3f1a1fe9f1bee5c8b21234acb6aa59ff628",
            "file": "src/app/services/hospital.service.ts",
            "properties": [
                {
                    "name": "hospital",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createHospital",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteHospital",
                    "args": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadHospitals",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Hospital[]>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateHospital",
                    "args": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Hospital } from '../models/hospital.model';\r\nimport { User } from '../models/user.model';\r\nconst base_url = environment.base_url;\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HospitalService {\r\n  public hospital: Hospital;\r\n  public user: User;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  get token(): string {\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n  get uid(): string {\r\n    return this.user.uid || '';\r\n  }\r\n  get headers() {\r\n    return {\r\n      headers: {\r\n        'x-token': this.token,\r\n      },\r\n    };\r\n  }\r\n\r\n  // .pipe(\r\n  //     map((resp) => {\r\n  //       const hos = resp.user.map(\r\n  //         (user) =>\r\n  //           new User(\r\n  //             user.name,\r\n  //             user.email,\r\n  //             user.img,\r\n  //             '',\r\n  //             user.google,\r\n  //             user.role,\r\n  //             user.uid\r\n  //           )\r\n  //       );\r\n  //       return {\r\n  //         total: resp.total,\r\n  //         user,\r\n\r\n  loadHospitals(): Observable<Hospital[]> {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/hospitals`; // ?since=${since}`;\r\n    return this.http\r\n      .get<{ ok: boolean; hospitals: Hospital[] }>(url, this.headers)\r\n      .pipe(\r\n        map((res: { ok: boolean; hospitals: Hospital[] }) => res.hospitals)\r\n      );\r\n    //       };\r\n    //     })\r\n    //   );\r\n  }\r\n  createHospital(name: string) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/hospitals`; //?since=${since}`;\r\n    return this.http.post(url, { name }, this.headers);\r\n  }\r\n  updateHospital(_id: string, name: string) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/hospitals/${_id}`; //?since=${since}`;\r\n    return this.http.put(url, { name }, this.headers);\r\n  }\r\n  deleteHospital(_id: string) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/hospitals/${_id}`; //?since=${since}`;\r\n    return this.http.delete(url, this.headers);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "token": {
                    "name": "token",
                    "getSignature": {
                        "name": "token",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                },
                "uid": {
                    "name": "uid",
                    "getSignature": {
                        "name": "uid",
                        "type": "string",
                        "returnType": "string",
                        "line": 21
                    }
                },
                "headers": {
                    "name": "headers",
                    "getSignature": {
                        "name": "headers",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "ModalImageService",
            "id": "injectable-ModalImageService-691be310b9845347f0d4bf16c8d588cb70b5a038daca4c1de109db4051ed7be785b5efe2f24f1a4d9ee2ab0758aa7230245d05088af14ca693832788190df946",
            "file": "src/app/services/modal-image.service.ts",
            "properties": [
                {
                    "name": "_hideModal",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "newImg",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<string>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"users\" | \"doctors\" | \"hospitals\"",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'no-img'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'no-img'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { EventEmitter, Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nconst base_url = environment.base_url;\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ModalImageService {\r\n  private _hideModal: boolean = true;\r\n\r\n  public type: 'users' | 'doctors' | 'hospitals';\r\n  public id: string;\r\n  public img: string;\r\n\r\n  public newImg: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  get hideModal() {\r\n    return this._hideModal;\r\n  }\r\n  // http://localhost:3000/api/uploads/users/3ec7b1c2-97c2-47b8-8a3c-4349c6a8f074.jpg\r\n  openModal(\r\n    type: 'users' | 'doctors' | 'hospitals',\r\n    id: string,\r\n    img: string = 'no-img'\r\n  ) {\r\n    this._hideModal = false;\r\n    this.type = type;\r\n    this.id = id;\r\n    // this.img = 'no-img';\r\n    if (img.includes('https')) {\r\n      this.img = img;\r\n    } else {\r\n      this.img = `${base_url}/uploads/${type}/${img}`;\r\n    }\r\n    console.log(this.img);\r\n  }\r\n  closeModal() {\r\n    this._hideModal = true;\r\n  }\r\n  constructor() {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 38
            },
            "accessors": {
                "hideModal": {
                    "name": "hideModal",
                    "getSignature": {
                        "name": "hideModal",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "SearchsService",
            "id": "injectable-SearchsService-3c62455548ae27808f993ddd912d093e1ab1e7b0ee958eabddba6e5ea262d99bdd017a32d5957be8a0e1cefd9f9c9185d550b57951d19eac79ba1cda65487703",
            "file": "src/app/services/searchs.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "doctorsSwitch",
                    "args": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Doctor[]",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "globalSearch",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hospitalsSwitch",
                    "args": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Hospital[]",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "\"users\" | \"doctors\" | \"hospitals\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "usersSwitch",
                    "args": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "User[]",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "results",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Doctor } from '../models/doctor.model';\r\nimport { Hospital } from '../models/hospital.model';\r\nimport { User } from '../models/user.model';\r\n\r\nconst base_url = environment.base_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchsService {\r\n  constructor(private http: HttpClient) {}\r\n  get token(): string {\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n  get headers() {\r\n    return {\r\n      headers: {\r\n        'x-token': this.token,\r\n      },\r\n    };\r\n  }\r\n\r\n  private usersSwitch(results: any[]): User[] {\r\n    return results.map(\r\n      (user) =>\r\n        new User(\r\n          user.name,\r\n          user.email,\r\n          user.img,\r\n          '',\r\n          user.google,\r\n          user.role,\r\n          user.uid\r\n        )\r\n    );\r\n  }\r\n  private hospitalsSwitch(results: any[]): Hospital[] {\r\n    return results.map(\r\n      (hospital) =>\r\n        new Hospital(\r\n          hospital.name,\r\n          hospital._id,\r\n\r\n          hospital.img,\r\n          hospital.user\r\n        )\r\n    );\r\n  }\r\n  private doctorsSwitch(results: any[]): Doctor[] {\r\n    return results.map(\r\n      (doctor) =>\r\n        new Doctor(\r\n          doctor.name,\r\n          doctor._id,\r\n\r\n          doctor.img,\r\n          doctor.hospital,\r\n          doctor.user\r\n        )\r\n    );\r\n  }\r\n  globalSearch(pattern: string) {\r\n    const url = `${base_url}/all/${pattern}`;\r\n    return this.http.get(url, this.headers);\r\n  }\r\n\r\n  search(type: 'users' | 'doctors' | 'hospitals', pattern: string) {\r\n    const url = `${base_url}/all/collection/${type}/${pattern}`;\r\n    return this.http.get<any[]>(url, this.headers).pipe(\r\n      map((res: any) => {\r\n        switch (type) {\r\n          case 'users':\r\n            return this.usersSwitch(res.results);\r\n            break;\r\n          case 'hospitals':\r\n            return this.hospitalsSwitch(res.results);\r\n          case 'doctors':\r\n            return this.doctorsSwitch(res.results);\r\n\r\n          default:\r\n            return [];\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "token": {
                    "name": "token",
                    "getSignature": {
                        "name": "token",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                },
                "headers": {
                    "name": "headers",
                    "getSignature": {
                        "name": "headers",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "SettingsService",
            "id": "injectable-SettingsService-d9670e665508100d8db2fbeccb2293a4ee6620cecb787859c1084d2f80e24b6e1d5892ce302da7f84c9d25f9ce87186f190a4d216503de3a80d82f5a2a56b442",
            "file": "src/app/services/settings.service.ts",
            "properties": [
                {
                    "name": "linkTheme",
                    "defaultValue": "document.querySelector( '#theme')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkCurrentTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  private linkTheme = document.querySelector( '#theme');\r\n  constructor() { \r\n    const url = localStorage.getItem('theme') || \"./assets/css/colors/default-dark.css\"; // con el get item leo el tema y como puede venir vacia la property asigno un default css\r\n    this.linkTheme?.setAttribute('href', url);\r\n   \r\n  }\r\n\r\n  changeTheme( theme: string){\r\n    \r\n    const url = `./assets/css/colors/${ theme }.css`;\r\n\r\n    this.linkTheme?.setAttribute('href', url)\r\n    localStorage.setItem('theme', url); //almaceno el theme y url en el local storage. leo theme y le pongo el url al theme\r\n    this.checkCurrentTheme();  \r\n  }\r\n  checkCurrentTheme() {\r\n  \r\n    const links = document.querySelectorAll('.selector');\r\n    links.forEach( elem => { //Barre elementos de links y expone el html\r\n      // CALLBACK\r\n      elem.classList.remove('working'); //remueve la seleccion\r\n      const btnTheme = elem.getAttribute('data-theme'); //selecciona el tema en el a\r\n      const btnThemeUrl = `./assets/css/colors/${btnTheme}.css`; //Selecciona etiqueta HTML (URL)\r\n      const currentTheme = this.linkTheme?.getAttribute('href'); //Devuelve el URL  del tema seleccionado actualmente\r\n\r\n      // Si la eqtiqueta HTML seleccionada corresponde al  atributo href del tema seleccionado por link, añadale el Class Working para mover el chulo\r\n        if (btnThemeUrl === currentTheme ) {\r\n          elem.classList.add('working');\r\n        }\r\n      \r\n\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "SidebarService",
            "id": "injectable-SidebarService-ca2c205608245c3cd42ab3af0b4d7814319b9f0e2106333049412e095492a375fcc171c703ae020b159f574f76ca81fef094d12463700afdad2c29c01df6c5de",
            "file": "src/app/services/sidebar.service.ts",
            "properties": [
                {
                    "name": "menu",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "loadMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SidebarService {\r\n  public menu = [];\r\n  loadMenu() {\r\n    this.menu = JSON.parse(localStorage.getItem('menu')) || [];\r\n  }\r\n}\r\n//   menu: any[] = [\r\n//     {\r\n//       title: 'Dashboard',\r\n//       icon: 'mdi mdi-gauge',\r\n//       submenu: [\r\n//         { title: 'Principal', url: '/' },\r\n//         { title: 'Progreso del tratamiento', url: 'progress' },\r\n//         { title: 'Tus predicciones', url: 'promises' },\r\n//         { title: 'Citas', url: 'rxjs' },\r\n//         { title: 'Estadisticas', url: 'chart1' },\r\n//       ],\r\n//     },\r\n//     {\r\n//       title: 'Maintenance',\r\n//       icon: 'mdi mdi-folder-lock-open',\r\n//       submenu: [\r\n//         { title: 'Users', url: 'users' },\r\n//         { title: 'Doctors', url: 'doctors' },\r\n//         { title: 'Hospitals', url: 'hospitals' },\r\n//       ],\r\n//     },\r\n//   ];\r\n//   constructor() {}\r\n// }\r\n",
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-7116e31f43490c6cbcbfe66d015abe071b17ae88a14c2dff47ca3d072a30884bf27df131d39bce3729b6192f9b5fb21222b18b84d8b7db4cd700701fbd9725af",
            "file": "src/app/services/user.service.ts",
            "properties": [
                {
                    "name": "auth2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createUser",
                    "args": [
                        {
                            "name": "formData",
                            "type": "RegisterForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "RegisterForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalStorage",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "menu",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "menu",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "googleInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadUsers",
                    "args": [
                        {
                            "name": "since",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "since",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "formData",
                            "type": "LoginForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "LoginForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loginGoogle",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveUser",
                    "args": [
                        {
                            "name": "data",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tokenValidation",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateProfile",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, map, catchError } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoadUser } from '../interfaces/load-users.interface';\r\n\r\nimport { LoginForm } from '../interfaces/login-form.interface';\r\nimport { RegisterForm } from '../interfaces/register-form.interface';\r\n\r\nimport { User } from '../models/user.model';\r\n\r\nconst base_url = environment.base_url;\r\ndeclare const gapi: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService { \r\n  public auth2: any;\r\n  public user: User;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.googleInit();\r\n  }\r\n  get token(): string {\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n  get role(): 'ADMIN_ROLE' | 'USER_ROLE'| \"\" {\r\n    return this.user.role;\r\n  }\r\n  get uid(): string {\r\n    return this.user.uid || '';\r\n  }\r\n  get headers() {\r\n    return {\r\n      headers: {\r\n        'x-token': this.token,\r\n      },\r\n    };\r\n  }\r\n  getLocalStorage(token: string, menu: any) {\r\n    localStorage.setItem('token', token); //New token version stored in resp.token\r\n    localStorage.setItem('menu', JSON.stringify(menu));\r\n  }\r\n\r\n  googleInit() {\r\n    return new Promise((resolve: any) => {\r\n      gapi.load('auth2', () => {\r\n        // Retrieve the singleton for the GoogleAuth library and set up the client.\r\n        this.auth2 = gapi.auth2.init({\r\n          client_id:\r\n            '173031288157-04e11udn1m1lrqkv4k0bg8h9u8oqf2jf.apps.googleusercontent.com',\r\n          cookiepolicy: 'single_host_origin',\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('menu');\r\n    // TODO: Delete menu\r\n    this.auth2.signOut().then(() => {\r\n      this.ngZone.run(() => {\r\n        this.router.navigateByUrl('/login');\r\n      });\r\n    });\r\n  }\r\n\r\n  tokenValidation(): Observable<boolean> {\r\n    return this.http\r\n      .get(`${base_url}/login/renew`, {\r\n        headers: {\r\n          'x-token': this.token,\r\n        },\r\n      })\r\n      .pipe(\r\n        map((resp: any) => {\r\n          console.log(resp);\r\n          const { email, google, name, role, img = '', uid } = resp.user;\r\n          this.user = new User(name, email, img, '', google, role, uid);\r\n\r\n          console.log(resp.user);\r\n          this.getLocalStorage(resp.token, resp.menu); //New token version stored in resp.token\r\n          return true;\r\n        }),\r\n        // map((resp: any) => true),\r\n        catchError((err) => of(false)) //atrapa el error que viene del pipe con la peticion y deuelve un observable\r\n      );\r\n  }\r\n\r\n  createUser(formData: RegisterForm) {\r\n    return this.http.post(`${base_url}/users`, formData).pipe(\r\n      tap((resp: any) => {\r\n        this.getLocalStorage(resp.token, resp.menu);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateProfile(data: { email: string; name: string; role: string }) {\r\n    return this.http.put(`${base_url}/users/${this.uid}`, data, this.headers);\r\n  }\r\n\r\n  login(formData: LoginForm) {\r\n    return this.http.post(`${base_url}/login`, formData).pipe(\r\n      tap((resp: any) => {\r\n        this.getLocalStorage(resp.token, resp.menu);\r\n      })\r\n    );\r\n  }\r\n\r\n  loginGoogle(token: string) {\r\n    return this.http.post(`${base_url}/login/google`, { token }).pipe(\r\n      tap((resp: any) => {\r\n        this.getLocalStorage(resp.token, resp.menu);\r\n      })\r\n    );\r\n  }\r\n  loadUsers(since: number = 0) {\r\n    // base_url = localhost:3000/api/users?since=0\r\n    const url = `${base_url}/users?since=${since}`;\r\n    return this.http.get<LoadUser>(url, this.headers).pipe(\r\n      map((resp) => {\r\n        const user = resp.user.map(\r\n          (user) =>\r\n            new User(\r\n              user.name,\r\n              user.email,\r\n              user.img,\r\n              '',\r\n              user.google,\r\n              user.role,\r\n              user.uid\r\n            )\r\n        );\r\n        return {\r\n          total: resp.total,\r\n          user,\r\n        };\r\n        // console.log(resp);\r\n      })\r\n    );\r\n  }\r\n  deleteUser(user: User) {\r\n    const url = `${base_url}/users/${user.uid}`;\r\n    return this.http.delete(url, this.headers);\r\n  }\r\n\r\n  saveUser(data: User) {\r\n    console.log(data);\r\n    return this.http.put(`${base_url}/users/${data.uid}`, data, this.headers);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "token": {
                    "name": "token",
                    "getSignature": {
                        "name": "token",
                        "type": "string",
                        "returnType": "string",
                        "line": 33
                    }
                },
                "role": {
                    "name": "role",
                    "getSignature": {
                        "name": "role",
                        "type": "",
                        "returnType": "\"ADMIN_ROLE\" | \"USER_ROLE\" | string",
                        "line": 36
                    }
                },
                "uid": {
                    "name": "uid",
                    "getSignature": {
                        "name": "uid",
                        "type": "string",
                        "returnType": "string",
                        "line": 39
                    }
                },
                "headers": {
                    "name": "headers",
                    "getSignature": {
                        "name": "headers",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AdminGuard",
            "id": "injectable-AdminGuard-6c793ecbce2dbadd16a1ce07d07c8aad6065d417208a7421be4188cd57bd8ab0f7d78d3589a18fa9723a56ed17dea157fd9d911c92135fac65a0282e658aa1ec",
            "file": "src/app/guards/admin.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (this.userService.role === 'ADMIN_ROLE') {\r\n      console.log('adminguard');\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl('/dashboard');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-730b9088946c63befd3e26194d49f475d429999be53c55861eb48cba8a9b8ea8bc6a0fcccbd439332a9e5d12bbaf273b82692660e4f6c58e2d9de4a00feefe5e",
            "file": "src/app/guards/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canLoad",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segments",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | UrlTree | Observable | Promise",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segments",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { UserService } from 'src/app/services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlSegment,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  canLoad(\r\n    route: Route,\r\n    segments: import('@angular/router').UrlSegment[]\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    return this.userService.tokenValidation().pipe(\r\n      tap((isAuth) => {\r\n        if (!isAuth) {\r\n          this.router.createUrlTree(['/login']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.userService.tokenValidation().pipe(\r\n      tap((isAuth) => {\r\n        if (!isAuth) {\r\n          this.router.createUrlTree(['/login']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "Doctor",
            "id": "class-Doctor-81614d49af840c575e451b155d61ffab5118490e1517ed715efdad96ef9e0518c553472b966ace7142a8c08ac6dd4fc990bbf88fb79e2209d090f77ac2fdf6a4",
            "file": "src/app/models/doctor.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Hospital } from './hospital.model';\r\n\r\ninterface _DoctorUser {\r\n  _id: string;\r\n  name: string;\r\n  img?: string;\r\n}\r\nexport class Doctor {\r\n  constructor(\r\n    public name: string | any,\r\n    public _id?: string | '',\r\n    public img?: string | any,\r\n    public hospital?: Hospital,\r\n    public user?: _DoctorUser\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_id",
                        "type": "string | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "hospital",
                        "type": "Hospital",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "user",
                        "type": "_DoctorUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_id",
                        "type": "string | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hospital",
                        "type": "Hospital",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "user",
                        "type": "_DoctorUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hospital",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "_DoctorUser",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Hospital",
            "id": "class-Hospital-d0cec433bc69a87f3abf1758ab1db98f4e0c19ce9d1326fadfced61602d62922e17444c705eb0cf2916b4d1016d2301111399095018fd7eb6255316904b33d84",
            "file": "src/app/models/hospital.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "interface _HospitalUser {\r\n  _id: string;\r\n  name: string;\r\n  img?: string;\r\n}\r\nexport class Hospital {\r\n  constructor(\r\n    public name: string,\r\n    public _id?: string | '',\r\n    public img?: string | any,\r\n    public user?: _HospitalUser\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_id",
                        "type": "string | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "user",
                        "type": "_HospitalUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_id",
                        "type": "string | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "user",
                        "type": "_HospitalUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "_HospitalUser",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-aae4569b5c53da496f06f0f2955fbff1956c45d1c1d9734d31cdd304194365e7aba199ec47a9292511ffa91fc9c95db9f06e872e14b28b2f4526bfabb1cf661f",
            "file": "src/app/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { environment } from '../../environments/environment';\r\n\r\nconst base_url = environment.base_url;\r\n\r\nexport class User {\r\n  constructor(\r\n    public name: string | any,\r\n    public email: string,\r\n    public img?: string | any,\r\n    public password?: string,\r\n    public google?: boolean,\r\n    public role?: 'ADMIN_ROLE' | 'USER_ROLE' | '',\r\n    public uid?: string | any\r\n  ) {}\r\n  get imageUrl() {\r\n    if (!this.img) {\r\n      // console.log(this.img);\r\n      return `${base_url}/uploads/users/no-image`;\r\n    } else if (this.img.includes('https')) {\r\n      return this.img;\r\n    } else if (this.img) {\r\n      return `${base_url}/uploads/users/${this.img}`;\r\n    } else {\r\n      return `${base_url}/uploads/users/no-image`;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "google",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "role",
                        "type": "\"ADMIN_ROLE\" | \"USER_ROLE\" | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "uid",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "img",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "google",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "role",
                        "type": "\"ADMIN_ROLE\" | \"USER_ROLE\" | string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "uid",
                        "type": "string | any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "google",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"ADMIN_ROLE\" | \"USER_ROLE\" | string",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | any",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "imageUrl": {
                    "name": "imageUrl",
                    "getSignature": {
                        "name": "imageUrl",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccountSettingsComponent",
            "id": "component-AccountSettingsComponent-5599a0e9780279460d1bc43a4f05387be35509cd9faf130ff9a21066bbcd77da27ee8bc8d8a5985d80d3f19d02bdac86f8bde6ad5151068b345eb2d28be65683",
            "file": "src/app/pages/account-settings/account-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-account-settings",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./account-settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from 'src/app/services/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class AccountSettingsComponent implements OnInit {\r\n  \r\n \r\n \r\n\r\n  constructor(private settingService: SettingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.settingService.checkCurrentTheme();\r\n  }\r\n   // #recibo el color y selecciono por id asignandolo a una constante... ? porque puede ser null\r\n  changeTheme( theme: string){\r\n    \r\n    this.settingService.changeTheme( theme);\r\n\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "settingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "settingService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n\r\n        <h4>Choose theme</h4>\r\n\r\n        <div class=\"r-panel-body\">\r\n          <ul id=\"themecolors\" class=\"m-t-20\">\r\n            <li><b>Con el sidebar claro</b></li>\r\n            <li>\r\n                <!-- working -->\r\n                <a (click)=\"changeTheme('default')\"data-theme=\"default\" class=\"selector default-theme\">1</a>\r\n              </li>\r\n              <li><a (click)=\"changeTheme('green')\" data-theme=\"green\" class=\"selector green-theme\">2</a></li>\r\n              <li><a (click)=\"changeTheme('red')\" data-theme=\"red\" class=\"selector red-theme\">3</a></li>\r\n              <li><a (click)=\"changeTheme('blue')\" data-theme=\"blue\" class=\"selector blue-theme\">4</a></li>\r\n            <li><a (click)=\"changeTheme('purple')\" data-theme=\"purple\" class=\"selector purple-theme\">5</a></li>\r\n            <li><a (click)=\"changeTheme('megna')\" data-theme=\"megna\" class=\"selector megna-theme\">6</a></li>\r\n\r\n            <li class=\"d-block m-t-30\"><b>Con el sidebar oscuro</b></li>\r\n            <li>\r\n              <a (click)=\"changeTheme('default-dark')\" data-theme=\"default-dark\" class=\"selector default-dark-theme\"\r\n                >7</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a (click)=\"changeTheme('green-dark')\" data-theme=\"green-dark\" class=\"selector green-dark-theme\">8</a>\r\n            </li>\r\n            <li>\r\n              <a (click)=\"changeTheme('red-dark')\" data-theme=\"red-dark\" class=\"selector red-dark-theme\">9</a>\r\n            </li>\r\n            <li>\r\n              <a (click)=\"changeTheme('blue-dark')\" data-theme=\"blue-dark\" class=\"selector blue-dark-theme \"\r\n                >10</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a (click)=\"changeTheme('purple-dark')\" data-theme=\"purple-dark\" class=\"selector purple-dark-theme\"\r\n                >11</a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a (click)=\"changeTheme('megna-dark')\" data-theme=\"megna-dark\" class=\"selector megna-dark-theme\"\r\n                >12</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-478614a8d057cd1e9f51735a09d8bcaac04972e48f8c63a1f49ee89c540c4fa3361dd5faa483373377dde405e649951192461e072ec1048376307f4c60bad631",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'adminpro'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'adminpro';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "BreadcrumbsComponent",
            "id": "component-BreadcrumbsComponent-78f76a7a1beb2bf627a903454240fc7006b33dc15ec0946991003dfc5ed42ede6ae495e29fb14c2fae4f453dd407743c3a339d3ac12ad71066c089407fe2b86c",
            "file": "src/app/shared/breadcrumbs/breadcrumbs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumbs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "titleSubs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getRoutesArgs",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, ActivationEnd, Router } from '@angular/router';\r\nimport { filter, map, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class BreadcrumbsComponent implements OnDestroy {\r\n\r\n  public title!: string;\r\n  public titleSubs$!: Subscription;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { \r\n// console.log(route.snapshot.children[0].data)\r\nthis.titleSubs$ = this.getRoutesArgs()\r\n                      .subscribe(( {title}) => {\r\n                        this.title = title;\r\n                        document.title = `Joker - ${ title }`;\r\n                      });\r\n}\r\n  ngOnDestroy(): void {\r\n    this.titleSubs$.unsubscribe();\r\n  }\r\n  getRoutesArgs(){\r\n\r\n    return this.router.events.pipe(\r\n      filter<any>(event => event instanceof ActivationEnd),\r\n      filter((event) => event.snapshot.firstChild === null ),\r\n      map((event) => event.snapshot.data)\r\n      \r\n      )\r\n\r\n      // Otra forma...\r\n      // .subscribe((data) => {\r\n        //    this.title = data.title;\r\n        // });\r\n      }\r\n    }\r\n    \r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<!-- ============================================================== -->\r\n<!-- Bread crumb and right sidebar toggle -->\r\n<!-- ============================================================== -->\r\n<div class=\"row page-titles\">\r\n  <div class=\"col-md-5 align-self-center\">\r\n    <h3 class=\"text-themecolor\">{{title}}</h3>\r\n  </div>\r\n  <div class=\"col-md-7 align-self-center\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">\r\n        <a href=\"javascript:void(0)\">Home</a>\r\n      </li>\r\n      <li class=\"breadcrumb-item\">pages</li>\r\n      <li class=\"breadcrumb-item active\">{{title}}</li>\r\n    </ol>\r\n  </div>\r\n\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- End Bread crumb and right sidebar toggle -->\r\n<!-- ============================================================== -->\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a53fd738b978780d39fb5fcc9ae4cfe0088e57a1f6ce674862d57dab9192140bd1c05548a9910db0469a431142886e658ff2e761f15781b2ad430e58d64724d0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 786,
                            "end": 799,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 787,
                                "end": 795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 34,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-52a51f2147b9f561629f517c052fa1c7e3eaa8d8729268e5ed80c72245a6188a19c1a72c2c1f5e20c9be7d130a027337862334d99f040db74354eeb84373218c",
            "file": "src/app/pages/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Welcome to your profile</h1>\r\n"
        },
        {
            "name": "DoctorComponent",
            "id": "component-DoctorComponent-6a41d4e41a2334e72417ee0acbc3a4ca2feded58d3ce4473a1ed8f0e505bef0210ac5966cafcbd93d4495cb32692402b4f5591c0f854f803e0c3a5a128d7acdb",
            "file": "src/app/pages/mainteneance/doctors/doctor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medico",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./doctor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "doctorForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hospitals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedDoctor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Doctor",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedHospital",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadDoctor",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadHospitals",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveDoctor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { delay } from 'rxjs';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\nimport { Hospital } from 'src/app/models/hospital.model';\r\nimport { DoctorService } from 'src/app/services/doctor.service';\r\nimport { HospitalService } from 'src/app/services/hospital.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-medico',\r\n  templateUrl: './doctor.component.html',\r\n  styles: [],\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n  public loading: boolean = true;\r\n  public hospitals: Hospital[] = [];\r\n\r\n  public selectedHospital: Hospital;\r\n  public selectedDoctor: Doctor;\r\n  public doctorForm: FormGroup;\r\n\r\n  constructor(\r\n    private hospitalService: HospitalService,\r\n    private doctorService: DoctorService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.doctorService.getDoctorById\r\n    this.activatedRoute.params.subscribe(({ id }) => this.loadDoctor(id));\r\n\r\n    this.doctorForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      hospital: ['', Validators.required],\r\n    });\r\n    this.loadHospitals();\r\n\r\n    this.doctorForm\r\n      .get('hospital')\r\n      .valueChanges.pipe(delay(100))\r\n      .subscribe((hospitalId) => {\r\n        this.selectedHospital = this.hospitals.find(\r\n          (h) => h._id === hospitalId\r\n        );\r\n        console.log(this.selectedHospital);\r\n      });\r\n  }\r\n  saveDoctor() {\r\n    const { name } = this.doctorForm.value;\r\n    // if (!this.selectedDoctor) {\r\n    //   return;\r\n    // }\r\n    this.doctorService\r\n      .createDoctor(this.doctorForm.value)\r\n      .subscribe((res: any) => {\r\n        if (this.selectedDoctor) {\r\n          //Update\r\n          const data = {\r\n            ...this.doctorForm.value,\r\n            _id: this.selectedDoctor._id,\r\n          };\r\n          this.doctorService.updateDoctor(data).subscribe((res) => {\r\n            Swal.fire(\r\n              'Updated',\r\n              `${name} has been modified successfully`,\r\n              'success'\r\n            );\r\n            // this.router.navigateByUrl(`/dashboard/doctor/${res.doctor._id}`);\r\n          });\r\n        } else {\r\n          //Create\r\n          this.doctorService\r\n            .createDoctor(this.doctorForm.value)\r\n            .subscribe((re: Doctor) => {\r\n              Swal.fire(\r\n                'Created',\r\n                `${name} was created successfully`,\r\n                'success'\r\n              );\r\n              this.router.navigateByUrl(`/dashboard/doctor/${res.doctor._id}`);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  loadHospitals() {\r\n    // this.loading = true;\r\n\r\n    this.hospitalService.loadHospitals().subscribe((hospitals: Hospital[]) => {\r\n      console.log(hospitals);\r\n      // this.loading = false;\r\n      this.hospitals = hospitals;\r\n    });\r\n  }\r\n  loadDoctor(id: string) {\r\n    if (id === 'new') {\r\n    }\r\n    this.doctorService.getDoctorById(id).subscribe((doctor) => {\r\n      if (!doctor) {\r\n        return this.router.navigateByUrl(`/dashboard/doctors`);\r\n      } else {\r\n        this.selectedDoctor = doctor;\r\n        const {\r\n          name,\r\n          hospital: { _id },\r\n        } = doctor;\r\n        this.doctorForm.setValue({ name, hospital: _id });\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "hospitalService",
                        "type": "HospitalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "doctorService",
                        "type": "DoctorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "hospitalService",
                        "type": "HospitalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "doctorService",
                        "type": "DoctorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row\">\r\n  <div class=\"col-lg-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Doctors</h4>\r\n        <h6 class=\"card-subtitle\">Profile</h6>\r\n\r\n        <form\r\n          class=\"form p-t-20\"\r\n          [formGroup]=\"doctorForm\"\r\n          (submit)=\"saveDoctor()\"\r\n        >\r\n          <div class=\"form-group row\">\r\n            <label for=\"exampleInputuname\" class=\"col-sm-3 control-label\"\r\n              >Picture</label\r\n            >\r\n            <div class=\"col-sm-9\">\r\n              <div class=\"input-group\">\r\n                <img\r\n                  class=\"w-200\"\r\n                  src=\"http://localhost:3000/api/uploads/users/3ec7b1c2-97c2-47b8-8a3c-4349c6a8f074.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"exampleInputuname\" class=\"col-sm-3 control-label\"\r\n              >Name</label\r\n            >\r\n            <div class=\"col-sm-9\">\r\n              <div class=\"input-group\">\r\n                <div class=\"input-group-addon\"><i class=\"ti-user\"></i></div>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputuname\"\r\n                  placeholder=\"Name\"\r\n                  formControlName=\"name\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-3 control-label\">Hospital</label>\r\n            <div class=\"col-sm-9\">\r\n              <div class=\"input-group\">\r\n                <select class=\"form-control\" formControlName=\"hospital\">\r\n                  <option value=\"\">Select</option>\r\n\r\n                  <option\r\n                    *ngFor=\"let hospital of hospitals\"\r\n                    [value]=\"hospital._id\"\r\n                  >\r\n                    {{ hospital.name }}\r\n                  </option>\r\n                  <!-- <option for=\"exampleInputEmail1\">hospital 3</option> -->\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"doctorForm.invalid\"\r\n            class=\"btn btn-success waves-effect waves-light m-r-10\"\r\n          >\r\n            <i class=\"fa fa-save\"></i>\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-inverse waves-effect waves-light\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col animated fadeIn fast\" *ngIf=\"selectedHospital\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Hospital</h4>\r\n        <h6 class=\"card-subtitle\">{{ selectedHospital.name }}</h6>\r\n        <div class=\"text-center\">\r\n          <img\r\n            class=\"img-thumbnail\"\r\n            [src]=\"selectedHospital.img | image: 'hospitals'\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DoctorsComponent",
            "id": "component-DoctorsComponent-c3d5b005ba08056801c67bb00c701526b6ab5a99fd08578111d23f704983c7c93dc26293e0cb7130052dce67b4277cf9053b146e188a4efa521ff4bb411039d9",
            "file": "src/app/pages/mainteneance/doctors/doctors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-doctors",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./doctors.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "doctors",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Doctor[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "doctorsTemp",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Doctor[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "modalImageService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalImageService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteDoctor",
                    "args": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadDoctors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "doctor",
                            "type": "Doctor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\nimport { DoctorService } from 'src/app/services/doctor.service';\r\nimport { ModalImageService } from 'src/app/services/modal-image.service';\r\nimport { SearchsService } from 'src/app/services/searchs.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-doctors',\r\n  templateUrl: './doctors.component.html',\r\n  styles: [],\r\n})\r\nexport class DoctorsComponent implements OnInit {\r\n  public loading: boolean = true;\r\n  public doctors: Doctor[] = [];\r\n  public doctorsTemp: Doctor[] = [];\r\n\r\n  constructor(\r\n    private doctorService: DoctorService,\r\n    private searchService: SearchsService,\r\n    public modalImageService: ModalImageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadDoctors();\r\n  }\r\n\r\n  search(pattern: string) {\r\n    if (pattern.length === 0) {\r\n      return (this.doctors = this.doctorsTemp);\r\n    }\r\n    this.searchService.search('doctors', pattern).subscribe((resp) => {\r\n      this.doctors = resp as Doctor[];\r\n    });\r\n  }\r\n\r\n  loadDoctors() {\r\n    this.loading = true;\r\n\r\n    this.doctorService.loadDoctor().subscribe((doctors) => {\r\n      console.log(doctors);\r\n      this.loading = false;\r\n      this.doctors = doctors;\r\n    });\r\n  }\r\n  // async addHospital() {\r\n  //   const { value = '' } = await Swal.fire<string>({\r\n  //     text: 'Add the name from the new hospital',\r\n  //     title: 'Create hospital',\r\n  //     input: 'text',\r\n  //     inputPlaceholder: `Hospital's name`,\r\n  //     showCancelButton: true,\r\n  //   });\r\n  //   if (value.trim().length > 0) {\r\n  //     this.doctorService.createDoctor(value).subscribe((res: any) => {\r\n  //       console.log(res);\r\n  //       this.doctors.push(res.hospital);\r\n  //     });\r\n  //   }\r\n\r\n  //   console.log(value);\r\n  // }\r\n  openModal(doctor: Doctor) {\r\n    // console.log(hodoctorspital);\r\n    this.loadDoctors();\r\n    this.modalImageService.openModal('doctors', doctor._id, doctor.img);\r\n  }\r\n\r\n  deleteDoctor(doctor: Doctor) {\r\n    Swal.fire({\r\n      title: 'Do you want to delete this user?',\r\n      text: `You are about to delete ${doctor.name}`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.doctorService.deleteDoctor(doctor._id).subscribe((res) => {\r\n          this.loadDoctors();\r\n          Swal.fire(\r\n            'User has been deleted',\r\n            `${doctor.name} has been deleted successfully`,\r\n            'success'\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "doctorService",
                        "type": "DoctorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "doctorService",
                        "type": "DoctorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row animated fadeIn fast\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search doctors...\"\r\n          (keyup)=\"search(txtpattern.value)\"\r\n          #txtpattern\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"loading\">\r\n  <div class=\"col-12\">\r\n    <div class=\"alert alert-info text-center\" role=\"alert\">\r\n      <h4 class=\"alert-heading\">Loading</h4>\r\n      <i class=\"fa fa-spin fa fa-refresh fa-2x\"></i>\r\n      <p class=\"mb-0\">Please wait</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"!loading\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Doctors</h4>\r\n        <h6 class=\"card-subtitle\">\r\n          They're associate partners an third-party consultor's\r\n        </h6>\r\n\r\n        <div class=\"col text-right\">\r\n          <div>\r\n            <a class=\"btn btn-primary\" routerLink=\"/dashboard/doctor/new\">\r\n              <i class=\"fa fa-hospital-o\"> </i>\r\n              New Doctor\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Picture</th>\r\n                <!-- <th>Email</th> -->\r\n                <th>name</th>\r\n                <th class=\"text-nowrap\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let doctor of doctors\">\r\n                <td class=\"text-center\">\r\n                  <img\r\n                    [src]=\"doctor.img | image: 'doctors'\"\r\n                    class=\"avatar cursor\"\r\n                    (click)=\"openModal(doctor)\"\r\n                  />\r\n                </td>\r\n                <td>{{ doctor.name }}</td>\r\n                <!-- <td>{{ doctor.name }} </td> -->\r\n                <!-- <td></td> -->\r\n                <!-- <td>\r\n                  <select class=\"form-control\">\r\n                    <option value=\"ADMIN_ROLE\">Admin</option>\r\n                    <option value=\"USER_ROLE\">User</option>\r\n                  </select>\r\n                </td> -->\r\n                <!-- <td>{{ user.name }}</td> -->\r\n                <!-- <td>\r\n                  <span class=\"label label-danger\">Google</span>\r\n                  &nbsp;\r\n                  <span class=\"label label-info\">Email</span>\r\n                </td> -->\r\n                <td class=\"text-nowrap text-center\">\r\n                  <a\r\n                    [routerLink]=\"['/dashboard/doctor', doctor._id]\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-original-title=\"Edit\"\r\n                  >\r\n                    <i class=\"fa fa-pencil text-inverse m-r-10\"></i>\r\n                  </a>\r\n                  <a\r\n                    data-toggle=\"tooltip\"\r\n                    data-original-title=\"Delete\"\r\n                    (click)=\"deleteDoctor(doctor)\"\r\n                    class=\"cursor\"\r\n                  >\r\n                    <i class=\"fa fa-close text-danger\"></i>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            <button class=\"btn btn-secondary\">Previous</button>\r\n            &nbsp;\r\n            <button class=\"btn btn-secondary\">Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DonaComponent",
            "id": "component-DonaComponent-748ffad69a96a8dd12518ef03cd813ed41d4eb38225848589bb073bf8e9473db4e1bcecc7961f56b6f3e272ca748fa1e93deb09219ef21579ed08177a3f05e7d",
            "file": "src/app/components/dona/dona.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dona",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dona.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[\r\n    [350, 450, 100],\r\n    // [50, 150, 120],\r\n    // [250, 130, 70],\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "MultiDataSet",
                    "decorators": []
                },
                {
                    "name": "labels",
                    "defaultValue": "[\"label1\", 'label2', 'label3']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Label[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Sin titulo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "[\r\n    {backgroundColor: ['#6857E6', '#009FEE', '#F02059', '#C355E6'] }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n//Third-party \r\n\r\nimport { Color, Label, MultiDataSet } from 'ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-dona',\r\n  templateUrl: './dona.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class DonaComponent {\r\n  @Input() title: string = 'Sin titulo' ; \r\n   \r\n   \r\n  // Doughnut\r\n  @Input('labels') doughnutChartLabels: Label[] = [\"label1\", 'label2', 'label3']; // @input('labels') para cambiar nombre de doughnutChartLabels\r\n  @Input('data') doughnutChartData: MultiDataSet = [\r\n    [350, 450, 100],\r\n    // [50, 150, 120],\r\n    // [250, 130, 70],\r\n  ];\r\n  // public doughnutChartType: ChartType = 'doughnut'; //propiedad string enviada al html\r\n\r\n  public colors: Color[] = [\r\n    {backgroundColor: ['#6857E6', '#009FEE', '#F02059', '#C355E6'] }\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"card\">\r\n    <div class=\"card-body\">\r\n<!-- 'Sin Titulo' -->\r\n        <h3>{{title}}</h3>\r\n\r\n        <div style=\"display: block\">\r\n            <canvas baseChart\r\n              [data]=\"doughnutChartData\"\r\n              [labels]=\"doughnutChartLabels\"\r\n              [colors]=\"colors\"\r\n              chartType=\"doughnut\">\r\n            </canvas>\r\n          </div>\r\n          \r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "Grafica1Component",
            "id": "component-Grafica1Component-855e95807f878dd078da043987443607dca6b162fcea3247047c5c0fd86199345f3b0d78997bf70b488e7996cc69bf076ea7a5a6c342ebdd3a04ac83d25c8e4e",
            "file": "src/app/pages/grafica1/grafica1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grafica1",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./grafica1.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data1",
                    "defaultValue": "[[35, 45, 100]]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data2",
                    "defaultValue": "[[85, 5, 10, 8]]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data3",
                    "defaultValue": "[[55, 35, 4, 3, 3]]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data4",
                    "defaultValue": "[[2, 3, 4]]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "labels1",
                    "defaultValue": "[\r\n    \"Alzheimer's disease\",\r\n    'Mild cognitive impairment',\r\n    'Cognitive normal',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "labels2",
                    "defaultValue": "[\r\n    'Costos en medicina',\r\n    'Costos en transporte',\r\n    'Costos en atención médica',\r\n    'Costos en horas laborales',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "labels3",
                    "defaultValue": "[\r\n    'Right hippocampus',\r\n    'Left hippocampus',\r\n    'Right/left Putamen',\r\n    'Amygdala',\r\n    'Palladium',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "labels4",
                    "defaultValue": "[\r\n    'Dinero ahorrado',\r\n    'Reducción de tiempo invertido',\r\n    'Mejora de condición con el tratamiento',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grafica1',\r\n  templateUrl: './grafica1.component.html',\r\n  styles: [],\r\n})\r\nexport class Grafica1Component {\r\n  public labels1: string[] = [\r\n    \"Alzheimer's disease\",\r\n    'Mild cognitive impairment',\r\n    'Cognitive normal',\r\n  ];\r\n  public data1 = [[35, 45, 100]];\r\n  public labels2: string[] = [\r\n    'Costos en medicina',\r\n    'Costos en transporte',\r\n    'Costos en atención médica',\r\n    'Costos en horas laborales',\r\n  ];\r\n  public data2 = [[85, 5, 10, 8]];\r\n  public labels3: string[] = [\r\n    'Right hippocampus',\r\n    'Left hippocampus',\r\n    'Right/left Putamen',\r\n    'Amygdala',\r\n    'Palladium',\r\n  ];\r\n  public data3 = [[55, 35, 4, 3, 3]];\r\n  public labels4: string[] = [\r\n    'Dinero ahorrado',\r\n    'Reducción de tiempo invertido',\r\n    'Mejora de condición con el tratamiento',\r\n  ];\r\n  public data4 = [[2, 3, 4]];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <app-dona title=\"Patients\" [labels]=\"labels1\" [data]=\"data1\"></app-dona>\r\n  </div>\r\n\r\n  <div class=\"col-6\">\r\n    <app-dona\r\n      title=\"Costos del tratamiento\"\r\n      [labels]=\"labels2\"\r\n      [data]=\"data2\"\r\n    ></app-dona>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <app-dona\r\n      title=\"%structural atrophy\"\r\n      [labels]=\"labels3\"\r\n      [data]=\"data3\"\r\n    ></app-dona>\r\n  </div>\r\n\r\n  <div class=\"col-6\">\r\n    <app-dona\r\n      title=\"Reporte mensual\"\r\n      [labels]=\"labels4\"\r\n      [data]=\"data4\"\r\n    ></app-dona>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3d494fd89671305c6be07de00e019efdf08f2e36c2169e5fb75a5acdb2841da927e3ef3cbd21cc18f478373a784b1fb90e8b63b9df4b3498a75b652bd9c37b38",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ce58d3c9cebb3ff456f9e82c0c9f869b1b55fa6d82fb8c3acea77d1ae1ca241b50bd29ccaee53a0d2b743a9557b9022a8402562790b02420a3f55ed1a9e580c4-1",
            "file": "src/app/shared/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { SearchsService } from 'src/app/services/searchs.service';\r\n// import { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styles: [],\r\n})\r\nexport class HeaderComponent {\r\n  public user: User;\r\n  // public user : User\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router // private searchService: SearchsService\r\n  ) {\r\n    this.user = userService.user;\r\n  }\r\n  logout() {\r\n    this.userService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n  search(pattern: string) {\r\n    // this.searchService.globalSearch(pattern);\r\n    console.log(pattern);\r\n    this.router.navigateByUrl(`/dashboard/search/${pattern}`);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<!-- Topbar header - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<header class=\"topbar\">\r\n  <nav class=\"navbar top-navbar navbar-expand-md navbar-light\">\r\n    <!-- ============================================================== -->\r\n    <!-- Logo -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"navbar-header\">\r\n      <a class=\"navbar-brand\" href=\"index.html\">\r\n        <!-- Logo icon --><b>\r\n          <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n          <!-- Dark Logo icon -->\r\n          <img\r\n            src=\"./assets/images/logo-icon.png\"\r\n            alt=\"homepage\"\r\n            class=\"dark-logo\"\r\n          />\r\n          <!-- Light Logo icon -->\r\n          <img\r\n            src=\"./assets/images/logo-light-icon.png\"\r\n            alt=\"homepage\"\r\n            class=\"light-logo\"\r\n          />\r\n        </b>\r\n        <!--End Logo icon -->\r\n        <!-- Logo text --><span>\r\n          <!-- dark Logo text -->\r\n          <img\r\n            src=\"./assets/images/logo-text.png\"\r\n            alt=\"homepage\"\r\n            class=\"dark-logo\" />\r\n          <!-- Light Logo text -->\r\n          <img\r\n            src=\"./assets/images/logo-light-text.png\"\r\n            class=\"light-logo\"\r\n            alt=\"homepage\"\r\n        /></span>\r\n      </a>\r\n    </div>\r\n    <!-- ============================================================== -->\r\n    <!-- End Logo -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"navbar-collapse\">\r\n      <!-- ============================================================== -->\r\n      <!-- toggle and nav items -->\r\n      <!-- ============================================================== -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <!-- This is  -->\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link nav-toggler hidden-md-up waves-effect waves-dark\"\r\n            href=\"javascript:void(0)\"\r\n            ><i class=\"ti-menu\"></i\r\n          ></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link sidebartoggler hidden-sm-down waves-effect waves-dark\"\r\n            href=\"javascript:void(0)\"\r\n            ><i class=\"ti-menu\"></i\r\n          ></a>\r\n        </li>\r\n        <li class=\"nav-item hidden-sm-down\"></li>\r\n      </ul>\r\n      <!-- ============================================================== -->\r\n      <!-- User profile and search -->\r\n      <!-- ============================================================== -->\r\n      <ul class=\"navbar-nav my-lg-0\">\r\n        <!-- ============================================================== -->\r\n        <!-- Search -->\r\n        <!-- ============================================================== -->\r\n        <li class=\"nav-item hidden-xs-down search-box\">\r\n          <a\r\n            class=\"nav-link hidden-sm-down waves-effect waves-dark\"\r\n            href=\"javascript:void(0)\"\r\n            ><i class=\"ti-search\"></i\r\n          ></a>\r\n          <form class=\"app-search\" (submit)=\"search(txtpattern.value)\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Search & enter\"\r\n              #txtpattern\r\n            />\r\n            <a class=\"srh-btn\"><i class=\"ti-close\"></i></a>\r\n          </form>\r\n        </li>\r\n        <!-- ============================================================== -->\r\n        <!-- Comment -->\r\n        <!-- ============================================================== -->\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle waves-effect waves-dark\"\r\n            href=\"\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"mdi mdi-message\"></i>\r\n            <div class=\"notify\">\r\n              <span class=\"heartbit\"></span> <span class=\"point\"></span>\r\n            </div>\r\n          </a>\r\n          <div\r\n            class=\"dropdown-menu dropdown-menu-right mailbox animated fadeIn fast\"\r\n          >\r\n            <ul>\r\n              <li>\r\n                <div class=\"drop-title\">Notifications</div>\r\n              </li>\r\n              <li>\r\n                <div class=\"message-center\">\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"btn btn-danger btn-circle\">\r\n                      <i class=\"fa fa-link\"></i>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Luanch Admin</h5>\r\n                      <span class=\"mail-desc\">Just see the my new admin!</span>\r\n                      <span class=\"time\">9:30 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"btn btn-success btn-circle\">\r\n                      <i class=\"ti-calendar\"></i>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Event today</h5>\r\n                      <span class=\"mail-desc\"\r\n                        >Just a reminder that you have event</span\r\n                      >\r\n                      <span class=\"time\">9:10 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"btn btn-info btn-circle\">\r\n                      <i class=\"ti-settings\"></i>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Settings</h5>\r\n                      <span class=\"mail-desc\"\r\n                        >You can customize this template as you want</span\r\n                      >\r\n                      <span class=\"time\">9:08 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"btn btn-primary btn-circle\">\r\n                      <i class=\"ti-user\"></i>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Pavan kumar</h5>\r\n                      <span class=\"mail-desc\">Just see the my admin!</span>\r\n                      <span class=\"time\">9:02 AM</span>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a class=\"nav-link text-center\" href=\"javascript:void(0);\">\r\n                  <strong>Check all notifications</strong>\r\n                  <i class=\"fa fa-angle-right\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <!-- ============================================================== -->\r\n        <!-- End Comment -->\r\n        <!-- ============================================================== -->\r\n        <!-- ============================================================== -->\r\n        <!-- Messages -->\r\n        <!-- ============================================================== -->\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle waves-effect waves-dark\"\r\n            href=\"\"\r\n            id=\"2\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"mdi mdi-email\"></i>\r\n            <div class=\"notify\">\r\n              <span class=\"heartbit\"></span> <span class=\"point\"></span>\r\n            </div>\r\n          </a>\r\n          <div\r\n            class=\"dropdown-menu mailbox dropdown-menu-right animated fadeIn fast\"\r\n            aria-labelledby=\"2\"\r\n          >\r\n            <ul>\r\n              <li>\r\n                <div class=\"drop-title\">You have 4 new messages</div>\r\n              </li>\r\n              <li>\r\n                <div class=\"message-center\">\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"user-img\">\r\n                      <img\r\n                        src=\"./assets/images/users/1.jpg\"\r\n                        alt=\"user\"\r\n                        class=\"img\"\r\n                      />\r\n                      <span class=\"profile-status online pull-right\"></span>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Pavan kumar</h5>\r\n                      <span class=\"mail-desc\">Just see the my admin!</span>\r\n                      <span class=\"time\">9:30 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"user-img\">\r\n                      <img\r\n                        src=\"./assets/images/users/2.jpg\"\r\n                        alt=\"user\"\r\n                        class=\"img-circle\"\r\n                      />\r\n                      <span class=\"profile-status busy pull-right\"></span>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Sonu Nigam</h5>\r\n                      <span class=\"mail-desc\"\r\n                        >I've sung a song! See you at</span\r\n                      >\r\n                      <span class=\"time\">9:10 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"user-img\">\r\n                      <img\r\n                        src=\"./assets/images/users/3.jpg\"\r\n                        alt=\"user\"\r\n                        class=\"img-circle\"\r\n                      />\r\n                      <span class=\"profile-status away pull-right\"></span>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Arijit Sinh</h5>\r\n                      <span class=\"mail-desc\">I am a singer!</span>\r\n                      <span class=\"time\">9:08 AM</span>\r\n                    </div>\r\n                  </a>\r\n                  <!-- Message -->\r\n                  <a href=\"#\">\r\n                    <div class=\"user-img\">\r\n                      <img\r\n                        src=\"./assets/images/users/4.jpg\"\r\n                        alt=\"user\"\r\n                        class=\"img-circle\"\r\n                      />\r\n                      <span class=\"profile-status offline pull-right\"></span>\r\n                    </div>\r\n                    <div class=\"mail-contnet\">\r\n                      <h5>Pavan kumar</h5>\r\n                      <span class=\"mail-desc\">Just see the my admin!</span>\r\n                      <span class=\"time\">9:02 AM</span>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a class=\"nav-link text-center\" href=\"javascript:void(0);\">\r\n                  <strong>See all e-Mails</strong>\r\n                  <i class=\"fa fa-angle-right\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <!-- ============================================================== -->\r\n        <!-- End Messages -->\r\n        <!-- ============================================================== -->\r\n        <!-- ============================================================== -->\r\n\r\n        <!-- ============================================================== -->\r\n        <!-- ============================================================== -->\r\n        <!-- Language -->\r\n        <!-- ============================================================== -->\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle waves-effect waves-dark\"\r\n            href=\"\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"flag-icon flag-icon-us\"></i\r\n          ></a>\r\n          <div class=\"dropdown-menu dropdown-menu-right animated fadeIn fast\">\r\n            <a class=\"dropdown-item\" href=\"#\"\r\n              ><i class=\"flag-icon flag-icon-in\"></i> India</a\r\n            >\r\n            <a class=\"dropdown-item\" href=\"#\"\r\n              ><i class=\"flag-icon flag-icon-fr\"></i> French</a\r\n            >\r\n            <a class=\"dropdown-item\" href=\"#\"\r\n              ><i class=\"flag-icon flag-icon-cn\"></i> China</a\r\n            >\r\n            <a class=\"dropdown-item\" href=\"#\"\r\n              ><i class=\"flag-icon flag-icon-de\"></i> Dutch</a\r\n            >\r\n          </div>\r\n        </li>\r\n        <!-- ============================================================== -->\r\n        <!-- Profile -->\r\n        <!-- ============================================================== -->\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle waves-effect waves-dark\"\r\n            href=\"\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n            ><img [src]=\"user.imageUrl\" alt=\"user\" class=\"profile-pic\"\r\n          /></a>\r\n          <div class=\"dropdown-menu dropdown-menu-right animated fadeIn fast\">\r\n            <ul class=\"dropdown-user\">\r\n              <li>\r\n                <div class=\"dw-user-box\">\r\n                  <div class=\"u-img\">\r\n                    <img [src]=\"user.imageUrl\" alt=\"user\" />\r\n                  </div>\r\n                  <div class=\"u-text\">\r\n                    <h4>{{ user.name }}</h4>\r\n                    <p class=\"text-muted\">\r\n                      {{ user.email | slice: 0:20 }}\r\n                      {{ user.email.length > 20 ? \"...\" : \"\" }}\r\n                    </p>\r\n                    <a\r\n                      href=\"pages-profile.html\"\r\n                      class=\"btn btn-rounded btn-danger btn-sm\"\r\n                      >View Profile</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li role=\"separator\" class=\"divider\"></li>\r\n              <li>\r\n                <a routerLink=\"./profile\"><i class=\"ti-user\"></i> My Profile</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\"><i class=\"ti-wallet\"></i> My Balance</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\"><i class=\"ti-email\"></i> Inbox</a>\r\n              </li>\r\n              <li role=\"separator\" class=\"divider\"></li>\r\n              <li>\r\n                <a routerLink=\"account-settings\"\r\n                  ><i class=\"ti-settings\"></i> Account Setting</a\r\n                >\r\n              </li>\r\n              <li role=\"separator\" class=\"divider\"></li>\r\n              <li>\r\n                <a xlass=\"cursor\" (click)=\"logout()\">\r\n                  <i class=\"fa fa-power-off\"></i>\r\n                  Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</header>\r\n<!-- ============================================================== -->\r\n<!-- End Topbar header -->\r\n"
        },
        {
            "name": "HospitalsComponent",
            "id": "component-HospitalsComponent-5267ae86d8cdccce862ca1754ead528569e4c5b471d9b34a05df633bf1f0c80e55ebfdafc2886e6cce1524c52563c90129dbd81e6415175a0cacee3d186b541a",
            "file": "src/app/pages/mainteneance/hospitals/hospitals.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hospitals",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hospitals.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hospitals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hospitalsTemp",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addHospital",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "loadHospitals",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeHospital",
                    "args": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveHospital",
                    "args": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hospital",
                            "type": "Hospital",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { delay } from 'rxjs';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Hospital } from 'src/app/models/hospital.model';\r\nimport { HospitalService } from 'src/app/services/hospital.service';\r\nimport { ModalImageService } from 'src/app/services/modal-image.service';\r\nimport Swal from 'sweetalert2';\r\nimport { SearchsService } from 'src/app/services/searchs.service';\r\n\r\n@Component({\r\n  selector: 'app-hospitals',\r\n  templateUrl: './hospitals.component.html',\r\n  styles: [],\r\n})\r\nexport class HospitalsComponent implements OnInit {\r\n  public hospitals: Hospital[] = [];\r\n  public loading: boolean = true;\r\n  public hospitalsTemp: Hospital[] = [];\r\n\r\n  constructor(\r\n    private hospitalService: HospitalService,\r\n    private modalImageService: ModalImageService,\r\n    private searchService: SearchsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadHospitals();\r\n\r\n    this.modalImageService.newImg\r\n      .pipe(delay(100))\r\n      .subscribe((img) => this.loadHospitals());\r\n  }\r\n\r\n  search(pattern: string) {\r\n    if (pattern.length === 0) {\r\n      return this.loadHospitals();\r\n    }\r\n    this.searchService.search('hospitals', pattern).subscribe((resp) => {\r\n      this.hospitals = resp;\r\n    });\r\n  }\r\n\r\n  loadHospitals() {\r\n    // this.loading = true;\r\n\r\n    this.hospitalService.loadHospitals().subscribe((hospitals) => {\r\n      console.log(hospitals);\r\n      this.loading = false;\r\n      this.hospitals = hospitals;\r\n    });\r\n  }\r\n\r\n  saveHospital(hospital: Hospital) {\r\n    this.hospitalService\r\n      .updateHospital(hospital._id, hospital.name)\r\n      .subscribe((res) => {\r\n        Swal.fire('Updated', hospital.name, 'success');\r\n      });\r\n  }\r\n  removeHospital(hospital: Hospital) {\r\n    this.hospitalService.deleteHospital(hospital._id).subscribe((res) => {\r\n      this.loadHospitals();\r\n      Swal.fire('Deleted', hospital.name, 'success');\r\n    });\r\n  }\r\n  async addHospital() {\r\n    const { value = '' } = await Swal.fire<string>({\r\n      text: 'Add the name from the new hospital',\r\n      title: 'Create hospital',\r\n      input: 'text',\r\n      inputPlaceholder: `Hospital's name`,\r\n      showCancelButton: true,\r\n    });\r\n    if (value.trim().length > 0) {\r\n      this.hospitalService.createHospital(value).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.hospitals.push(res.hospital);\r\n      });\r\n    }\r\n\r\n    console.log(value);\r\n  }\r\n\r\n  openModal(hospital: Hospital) {\r\n    console.log(hospital);\r\n    this.loadHospitals();\r\n    this.modalImageService.openModal('hospitals', hospital._id, hospital.img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "hospitalService",
                        "type": "HospitalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "hospitalService",
                        "type": "HospitalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row animated fadeIn fast\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search hospital...\"\r\n          (keyup)=\"search(txtpattern.value)\"\r\n          #txtpattern\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>\r\n  <div class=\"row animated fadeIn fast\" *ngIf=\"loading\">\r\n    <div class=\"col-12\">\r\n      <div class=\"alert alert-info text-center\" role=\"alert\">\r\n        <h4 class=\"alert-heading\">Loading</h4>\r\n        <i class=\"fa fa-spin fa fa-refresh fa-2x\"></i>\r\n        <p class=\"mb-0\">Please wait</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row animated fadeIn fast\" *ngIf=\"!loading\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-8\">\r\n              <h4 class=\"card-title\">Hospitals | ({{ hospitals.length }})</h4>\r\n              <h6 class=\"card-subtitle\">Partner organizations</h6>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col text-right\">\r\n            <button class=\"btn btn-primary\" (click)=\"addHospital()\">\r\n              <i class=\"fa fa-hospital-o\"> </i>\r\n              New hospital\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Picture</th>\r\n                <th>Name</th>\r\n                <th class=\"text-nowrap\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr *ngFor=\"let hospital of hospitals\">\r\n                <td class=\"text-center\">\r\n                  <img\r\n                    [src]=\"hospital.img | image: 'hospitals'\"\r\n                    class=\"avatar cursor\"\r\n                    (click)=\"openModal(hospital)\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Hospital's name\"\r\n                    [(ngModel)]=\"hospital.name\"\r\n                  />\r\n                </td>\r\n\r\n                <!-- <td>{{ user.name }}</td> -->\r\n\r\n                <td class=\"text-nowrap text-center\">\r\n                  <a\r\n                    data-toggle=\"tooltip\"\r\n                    (click)=\"saveHospital(hospital)\"\r\n                    data-original-title=\"save\"\r\n                    class=\"cursor\"\r\n                  >\r\n                    <i class=\"fa fa-pencil text-inverse m-r-10\"></i>\r\n                  </a>\r\n                  <a\r\n                    data-toggle=\"tooltip\"\r\n                    data-original-title=\"Delete\"\r\n                    (click)=\"removeHospital(hospital)\"\r\n                    class=\"cursor\"\r\n                  >\r\n                    <i class=\"fa fa-close text-danger\"></i>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            <button class=\"btn btn-secondary\">Previous</button>\r\n            &nbsp;\r\n            <button class=\"btn btn-secondary\">Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "IncreaserComponent",
            "id": "component-IncreaserComponent-b6e41f9518bc5d114b742057c7ad8f0d8e5a221b71478dbf4a75095e26d7938f64d2d62a5feeb2de10608c916ba118f7da6d51452673ecfba28765481bc3e096",
            "file": "src/app/components/increaser/increaser.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-increaser",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./increaser.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "btnClass",
                    "defaultValue": "'btn-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "valor",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valor",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, EventEmitter, Output, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-increaser',\r\n  templateUrl: './increaser.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class IncreaserComponent implements OnInit {\r\n  ngOnInit() {\r\n    this.btnClass = `btn ${this.btnClass}`; //Concateno el btn a btnClass para no poner btn btn-primary HTML\r\n  }\r\n\r\n//  @Input() progreso: number = 50;\r\n @Input('valor') progreso: number = 50; //se cambia el argumento por [valor]\r\n @Input() btnClass: string = 'btn-primary';\r\n\r\n @Output('valor') exitValue: EventEmitter<number> = new EventEmitter();\r\n  \r\n  \r\n  changeValue ( value: number ) {\r\n\r\n    if (this.progreso + value > 100 ) {\r\n      this.exitValue.emit(100);\r\n      return;\r\n    }\r\n    if (this.progreso + value < 0) {\r\n      this.exitValue.emit(0);\r\n      return;\r\n    }\r\n    // otra alternativa:\r\n    // if (this.progreso + valor <= 100 && this.progreso + valor >= 0) {\r\n      // this.progreso += valor;\r\n      // }\r\n      this.progreso = this.progreso + value;\r\n      this.exitValue.emit(this.progreso);\r\n  }\r\n\r\n  onChange ( newValue: number ){\r\n\r\n    if(newValue >= 100 ){\r\n      this.progreso = 100;\r\n    } else if (newValue <= 0) {\r\n      this.progreso = 0;\r\n    } else {\r\n      this.progreso = newValue;\r\n    }\r\n    this.exitValue.emit(this.progreso);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"input-group\">\r\n    <span class=\"input-group-btn\">\r\n      <button\r\n        [ngClass]=\"btnClass\"\r\n        (click)=\"changeValue(-5)\"\r\n        type=\"button\"\r\n      >\r\n        <i class=\"fa fa-minus\"></i>\r\n      </button>\r\n    </span>\r\n\r\n    <input\r\n      type=\"number\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{'is-invalid': progreso > 100 || progreso < 0}\"\r\n      placeholder=\"Progreso\"\r\n      min=\"0\"\r\n      max=\"100\"\r\n      (ngModelChange)=\"onChange($event)\"\r\n      [(ngModel)]=\"progreso\"\r\n    />\r\n\r\n    <span class=\"input-group-btn\">\r\n      <button\r\n        [ngClass]=\"btnClass\"\r\n        (click)=\"changeValue(5)\"\r\n        type=\"button\"\r\n      >\r\n        <i class=\"fa fa-plus\"></i>\r\n      </button>\r\n    </span>\r\n  </div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-b69d94ff76a4a41b457a36d0f0e57970e2c9813b11b05f12340db5b9e3b73c7aa0d85ddbc0f08f5df9836dcec4e6ea32a7ad449c9887f68e8c38339ef39f9a3c",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "auth2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\r\n    email: [\r\n      localStorage.getItem('email') || '',\r\n      [Validators.required, Validators.email],\r\n    ], // Correo existente en localStorage || string vacio (evitar el null)\r\n    password: ['', Validators.required],\r\n    rememberMe: [false],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "attachSignin",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "renderButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "startApp",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const gapi: any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\n// STATE FOR CONFIRMING FORM SUBMISSION AND OAUTH2 login too.\r\nexport class LoginComponent implements OnInit {\r\n  public formSubmitted = false;\r\n  public auth2: any;\r\n\r\n  public loginForm: any = this.fb.group({\r\n    email: [\r\n      localStorage.getItem('email') || '',\r\n      [Validators.required, Validators.email],\r\n    ], // Correo existente en localStorage || string vacio (evitar el null)\r\n    password: ['', Validators.required],\r\n    rememberMe: [false],\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.renderButton();\r\n  }\r\n  //manejo del formulario\r\n\r\n  login() {\r\n    this.userService.login(this.loginForm.value).subscribe({\r\n      next: (resp) => {\r\n        console.log(resp);\r\n\r\n        if (this.loginForm.get('rememberMe').value) {\r\n          localStorage.setItem('email', this.loginForm.get('email').value);\r\n        } else {\r\n          localStorage.removeItem('email');\r\n        }\r\n        // navegar al dashboard\r\n        this.router.navigateByUrl('/');\r\n      },\r\n      error: (err) => {\r\n        Swal.fire('Error', err.error.msg, 'error');\r\n      },\r\n    });\r\n\r\n    // console.log(this.loginForm.value)\r\n  }\r\n  // var\r\n  // var id_token = googleUser.getAuthResponse().id_token;\r\n\r\n  renderButton() {\r\n    gapi.signin2.render('my-signin2', {\r\n      scope: 'profile email',\r\n      width: 240,\r\n      height: 50,\r\n      longtitle: true,\r\n      theme: 'dark',\r\n    });\r\n    this.startApp();\r\n  }\r\n  async startApp() {\r\n    await this.userService.googleInit();\r\n    this.auth2 = this.userService.auth2;\r\n    this.attachSignin(document.getElementById('my-signin2'));\r\n  }\r\n  attachSignin(element: any) {\r\n    this.auth2.attachClickHandler(\r\n      element,\r\n      {},\r\n      (googleUser: any) => {\r\n        const id_token = googleUser.getAuthResponse().id_token;\r\n        // console.log(id_token);\r\n        this.userService.loginGoogle(id_token).subscribe((resp) => {\r\n          // navegar al dashboard\r\n          this.ngZone.run(() => {\r\n            this.router.navigateByUrl('/');\r\n          });\r\n        });\r\n      },\r\n      (error: any) => {\r\n        alert(JSON.stringify(error, undefined, 2));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n// function signOut() {\r\n//   var auth2 = gapi.auth2.getAuthInstance();\r\n//   auth2.signOut().then(function () {\r\n//     console.log('User signed out.');\r\n//   });\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\r\nTemplate Name: Admin pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*\r\nTemplate Name: Admin Pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*Theme Colors*/\r\n/*bootstrap Color*/\r\n/*Light colors*/\r\n/*Normal Color*/\r\n/*Extra Variable*/\r\n/*******************\r\nLogin register and recover password Page\r\n******************/\r\n.login-register {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 10% 0;\r\n    position: fixed; }\r\n  \r\n  .login-box {\r\n    width: 400px;\r\n    margin: 0 auto; }\r\n    .login-box .footer {\r\n      width: 100%;\r\n      left: 0px;\r\n      right: 0px; }\r\n    .login-box .social {\r\n      display: block;\r\n      margin-bottom: 30px; }\r\n  \r\n  #recoverform {\r\n    display: none; }\r\n  \r\n  .login-sidebar {\r\n    padding: 0px;\r\n    margin-top: 0px; }\r\n    .login-sidebar .login-box {\r\n      right: 0px;\r\n      position: absolute;\r\n      height: 100%; }\r\n  ",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<section\r\n  id=\"wrapper\"\r\n  class=\"login-register login-sidebar\"\r\n  style=\"background-image: url(../assets/images/background/login-register.jpg)\"\r\n>\r\n  <div class=\"login-box card\">\r\n    <div class=\"card-body\">\r\n      <form\r\n        class=\"form-horizontal form-material\"\r\n        id=\"loginform\"\r\n        autocomplete=\"off\"\r\n        [formGroup]=\"loginForm\"\r\n        (ngSubmit)=\"login()\"\r\n      >\r\n        <a href=\"javascript:void(0)\" class=\"text-center db\"\r\n          ><img src=\"../assets/images/logo-icon.png\" alt=\"Home\" /><br /><img\r\n            src=\"../assets/images/logo-text.png\"\r\n            alt=\"Home\"\r\n        /></a>\r\n        <div class=\"form-group m-t-40\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"checkbox checkbox-primary pull-left p-t-0\">\r\n              <input\r\n                id=\"checkbox-signup\"\r\n                type=\"checkbox\"\r\n                class=\"filled-in chk-col-light-blue\"\r\n                formControlName=\"rememberMe\"\r\n              />\r\n              <label for=\"checkbox-signup\"> Remember me </label>\r\n            </div>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              id=\"to-recover\"\r\n              class=\"text-dark pull-right\"\r\n              ><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a\r\n            >\r\n          </div>\r\n        </div>\r\n        <div id=\"google-btn\">\r\n          <div id=\"my-signin2\"></div>\r\n        </div>\r\n        <div class=\"form-group text-center m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <button\r\n              class=\"btn btn-info btn-lg btn-block text-uppercase btn-rounded\"\r\n              type=\"submit\"\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center mb-4\"\r\n            id=\"google-btn\"\r\n          >\r\n            <div id=\"my-signin2\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group m-b-0\">\r\n          <div class=\"col-sm-12 text-center\">\r\n            Don't have an account?\r\n            <a routerLink=\"/register\" class=\"text-primary m-l-5\"\r\n              ><b>Sign Up</b></a\r\n            >\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form class=\"form-horizontal\" id=\"recoverform\" action=\"index.html\">\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <h3>Recover Password</h3>\r\n            <p class=\"text-muted\">\r\n              Enter your Email and instructions will be sent to you!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              required=\"\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <button\r\n              class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\"\r\n              type=\"submit\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- ============================================================== -->\r\n<!-- End Wrapper -->\r\n<!-- ============================================================== -->\r\n"
        },
        {
            "name": "ModalImageComponent",
            "id": "component-ModalImageComponent-2c6a20acc8eee6485bcbc4da57de2e1cc93fedb0f4fa352689ed6f2bde844832844638758074a12d100787b5db7c018f2d754efa707cd3d89ebba32368eab898",
            "file": "src/app/components/modal-image/modal-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./modal-image.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fileUploadService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileUploadService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imgTemp",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "modalImageService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalImageService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploadFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeImage",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadImg",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FileUploadService } from 'src/app/services/file-upload.service';\r\nimport { ModalImageService } from 'src/app/services/modal-image.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modal-image',\r\n  templateUrl: './modal-image.component.html',\r\n  styles: [],\r\n})\r\nexport class ModalImageComponent implements OnInit {\r\n  // public hideModal: boolean = false;\r\n  public uploadFile: File;\r\n  public imgTemp: any = null;\r\n  constructor(\r\n    public modalImageService: ModalImageService,\r\n    public fileUploadService: FileUploadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  closeModal() {\r\n    this.imgTemp = null;\r\n    this.modalImageService.closeModal();\r\n  }\r\n  changeImage(file: File) {\r\n    this.uploadFile = file;\r\n\r\n    if (!file) {\r\n      return (this.imgTemp = null);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = () => (this.imgTemp = reader.result);\r\n    // console.log(file);\r\n  }\r\n\r\n  uploadImg() {\r\n    const id = this.modalImageService.id;\r\n    const type = this.modalImageService.type;\r\n\r\n    this.fileUploadService\r\n      .updatePhoto(this.uploadFile, type, id)\r\n      .then((img) => {\r\n        Swal.fire('guardado', 'changes has been saved', 'success');\r\n        this.modalImageService.newImg.emit(img);\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire('Error', 'Image could not be uploaded', 'error');\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fileUploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fileUploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"modal-image-bg hidden animated fadeIn fast\"\r\n  [class.hidden]=\"modalImageService.hideModal\"\r\n>\r\n  <div\r\n    class=\"modal fade show\"\r\n    id=\"exampleModal\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n    aria-labelledby=\"exampleModalLabel1\"\r\n    style=\"display: block\"\r\n  >\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\" id=\"exampleModalLabel1\">Upload your image</h4>\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <h3>Select new image</h3>\r\n          <div class=\"text-center\">\r\n            <img\r\n              *ngIf=\"!imgTemp\"\r\n              [src]=\"modalImageService.img\"\r\n              class=\"img-avatar\"\r\n              alt=\"\"\r\n            />\r\n            <img *ngIf=\"imgTemp\" [src]=\"imgTemp\" class=\"img-avatar\" alt=\"\" />\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            (change)=\"changeImage($any($event.target).files[0])\"\r\n          />\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-default\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            Close\r\n          </button>\r\n          <button \r\n            type=\"button\" class=\"btn btn-primary\" (click)=\"uploadImg()\">\r\n            Upload image\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NotfoundComponent",
            "id": "component-NotfoundComponent-fa18fe214af8d5b906341003e52f6d846d1fa2ca93b358df5469ef699d2404dc65bc35be422d7667a4c3f0999439016429a9e7463b7c59e1be789144ca9593a2",
            "file": "src/app/notfound/notfound.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notfound",
            "styleUrls": [
                "./notfound.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./notfound.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: [ './notfound.component.css' ]\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n ngOnInit(): void {\r\n\r\n }\r\n year = new Date().getFullYear();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\r\nTemplate Name: Admin pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*\r\nTemplate Name: Admin Pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*Theme Colors*/\r\n/*bootstrap Color*/\r\n/*Light colors*/\r\n/*Normal Color*/\r\n/*Extra Variable*/\r\n/*******************\r\nError Page\r\n******************/\r\n.error-box {\r\n    height: 100%;\r\n    position: fixed;\r\n    background: url(../../assets/images/background/error-bg.jpg) no-repeat center center #fff;\r\n    width: 100%; }\r\n    .error-box .footer {\r\n      width: 100%;\r\n      left: 0px;\r\n      right: 0px; }\r\n  \r\n  .error-body {\r\n    padding-top: 5%; }\r\n    .error-body h1 {\r\n      font-size: 210px;\r\n      font-weight: 900;\r\n      text-shadow: 4px 4px 0 #ffffff, 6px 6px 0 #263238;\r\n      line-height: 210px; }\r\n  ",
                    "styleUrl": "./notfound.component.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<section id=\"wrapper\" class=\"error-page\">\r\n    <div class=\"error-box\">\r\n        <div class=\"error-body text-center\">\r\n            <h1>404</h1>\r\n            <h3 class=\"text-uppercase\">Page Not Found !</h3>\r\n            <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND THIS WAY HOME</p>\r\n            <a href=\"index.html\" class=\"btn btn-info btn-rounded waves-effect waves-light m-b-40\">Home</a> </div>\r\n        <footer class=\"footer text-center\">© {{year}} Admin Pro.</footer>\r\n    </div>\r\n</section>\r\n<!-- ============================================================== -->\r\n<!-- End Wrapper -->\r\n<!-- ============================================================== -->"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-badb6d8cee577661da79ba82ad8f599604afd40fa34e36c7b88d71d77a4fbc7184228cba2f0d73e255d0b7bc51c4c7a8e7b0128b3624aeb0255abab9030fa59a",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PagesComponent",
            "id": "component-PagesComponent-d371a1791bbd2f0c686d7fa811f6c00bd0300f25f71ba4822ecec0358d284e21a4ca6573086431439ab7eac9477b5bd30d0c736b63d0286027e9312cccfb6f67",
            "file": "src/app/pages/pages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pages",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pages.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SidebarService } from 'src/app/services/sidebar.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\ndeclare function customInitFunctions(): any;\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styles: [],\r\n})\r\nexport class PagesComponent implements OnInit {\r\n  constructor(\r\n    private SettingsService: SettingsService,\r\n    private sidebarService: SidebarService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    customInitFunctions();\r\n\r\n    // localStorage.setItem('theme', url); //Me aseguro de que en localStorage siempre theme tenga un valor\r\n    this.sidebarService.loadMenu();\r\n    console.log(this.sidebarService.menu);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "SettingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sidebarService",
                        "type": "SidebarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "SettingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sidebarService",
                        "type": "SidebarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div id=\"main-wrapper\">\r\n  <app-header></app-header>\r\n  <app-sidebar></app-sidebar>\r\n\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"container-fluid\">\r\n      <!--Breadcrumbs  -->\r\n      <app-breadcrumbs></app-breadcrumbs>\r\n      <!-- Mi sistema de rutas -->\r\n      <router-outlet></router-outlet>\r\n\r\n      <!-- <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n    </div>\r\n    <!-- footer -->\r\n    <!-- ============================================================== -->\r\n    <footer class=\"footer\">© 2021 Admin Pro by wrappixel.com</footer>\r\n    <!-- ============================================================== -->\r\n    <!-- End footer -->\r\n  </div>\r\n</div>\r\n<!-- <app-spinner></app-spinner> -->\r\n\r\n<app-modal-image></app-modal-image>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-67b72c60571b9411ae8abcb088a7bc790d6957365bb9369d46462adedb9595ad25095c59b7d1fa167916d656b10ec629c1b0bf4e2cade554f0bbcb683723b6be",
            "file": "src/app/pages/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imgTemp",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploadFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeImage",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadImg",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { FileUploadService } from 'src/app/services/file-upload.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styles: [],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public profileForm: FormGroup;\r\n  public user: User;\r\n  public uploadFile: File;\r\n  public imgTemp: any = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private fileUploadService: FileUploadService\r\n  ) {\r\n    this.user = userService.user;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileForm = this.fb.group({\r\n      name: [this.user.name, Validators.required],\r\n      role: [this.user.role, Validators.required],\r\n      email: [this.user.email, [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n  updateProfile() {\r\n    console.log(this.profileForm.value);\r\n    this.userService.updateProfile(this.profileForm.value).subscribe({\r\n      // next?: (value: Object) => void, error?: (error: any) => void, complete?: () => void):\r\n      next: () => {\r\n        // console.log(resp);\r\n        const { name, email, role } = this.profileForm.value;\r\n        console.log(name);\r\n        this.user.name = name;\r\n        this.user.role = role;\r\n        this.user.email = email;\r\n        Swal.fire('guardado', `${name} has been saved`, 'success');\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n        Swal.fire('Error', err.error.msg, 'error');\r\n      },\r\n    });\r\n  }\r\n\r\n  changeImage(file: File) {\r\n    this.uploadFile = file;\r\n\r\n    if (!file) {\r\n      return (this.imgTemp = null);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = () => (this.imgTemp = reader.result);\r\n  }\r\n\r\n  uploadImg() {\r\n    this.fileUploadService\r\n      .updatePhoto(this.uploadFile, 'users', this.user.uid)\r\n      .then((img) => {\r\n        this.user.img = img;\r\n        Swal.fire('guardado', 'changes has been saved', 'success');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Swal.fire('Error', 'Image could not be uploaded', 'error');\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fileUploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fileUploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Your Profile</h4>\r\n        <h6 class=\"card-subtitle\">Settings</h6>\r\n        <form\r\n          class=\"form p-t-20\"\r\n          [formGroup]=\"profileForm\"\r\n          (submit)=\"updateProfile()\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputuname\">User Name</label>\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-addon\"><i class=\"ti-user\"></i></div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputuname\"\r\n                placeholder=\"Username\"\r\n                formControlName=\"name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Email address</label>\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-addon\"><i class=\"ti-email\"></i></div>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Enter email\"\r\n                formControlName=\"email\"\r\n                [readOnly]=\"user.google\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"form-group\">\r\n            <label for=\"pwd1\">Password</label>\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-addon\"><i class=\"ti-lock\"></i></div>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"pwd1\"\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"pwd2\">Confirm Password</label>\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-addon\"><i class=\"ti-lock\"></i></div>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"pwd2\"\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"checkbox checkbox-success\">\r\n              <input id=\"checkbox1\" type=\"checkbox\" />\r\n              <label for=\"checkbox1\"> Remember me </label>\r\n            </div>\r\n          </div> -->\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-success waves-effect waves-light m-r-10 btn-block\"\r\n            [disabled]=\"profileForm.invalid\"\r\n          >\r\n            <i class=\"fa fa-save\"></i> Save changes\r\n          </button>\r\n          <!-- <button\r\n            type=\"submit\"\r\n            class=\"btn btn-inverse waves-effect waves-light\"\r\n          >\r\n            Cancel\r\n          </button> -->\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Avatar</h4>\r\n        <h6 class=\"card-title\">User's image</h6>\r\n        <div class=\"text-center\">\r\n          <img\r\n            *ngIf=\"!imgTemp\"\r\n            [src]=\"user.imageUrl\"\r\n            class=\"img-avatar\"\r\n            alt=\"\"\r\n          />\r\n          <img *ngIf=\"imgTemp\" [src]=\"imgTemp\" class=\"img-avatar\" alt=\"\" />\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          (change)=\"changeImage($any($event.target).files[0])\"\r\n        />\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"!uploadFile\"\r\n          (click)=\"uploadImg()\"\r\n          class=\"btn btn-success waves-effect waves-light m-r-10 btn-block\"\r\n        >\r\n          <i class=\"fa fa-save\"></i> Change images\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProgressComponent",
            "id": "component-ProgressComponent-ed78bd56847990105a0266ff45aa69f039b0169214d9e322428f9002b2961c2240b8ed613ac92c9fe758f3c361fcc011635d0bf309269a23f85f61a095f1c745",
            "file": "src/app/pages/progress/progress.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress",
            "styleUrls": [
                "./progress.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./progress.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "progreso1",
                    "defaultValue": "25",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "progreso2",
                    "defaultValue": "35",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: [ './progress.component.css'\r\n  ]\r\n})\r\nexport class ProgressComponent {\r\n progreso1: number = 25;\r\n progreso2: number = 35;\r\n\r\n get getProgreso1(){\r\n   return `${this.progreso1}%`\r\n }\r\n get getProgreso2(){\r\n   return `${this.progreso2}%`\r\n }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\r\nTemplate Name: Admin pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*\r\nTemplate Name: Admin Pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*Theme Colors*/\r\n/*bootstrap Color*/\r\n/*Light colors*/\r\n/*Normal Color*/\r\n/*Extra Variable*/\r\n/*******************\r\nProgress bar\r\n******************/\r\n.progress.active .progress-bar,\r\n.progress-bar.active {\r\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\r\n  -o-animation: progress-bar-stripes 2s linear infinite;\r\n  animation: progress-bar-stripes 2s linear infinite; }\r\n\r\n.progress-vertical {\r\n  min-height: 250px;\r\n  height: 250px;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-bottom: 0;\r\n  margin-right: 20px; }\r\n\r\n.progress-vertical-bottom {\r\n  min-height: 250px;\r\n  height: 250px;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-bottom: 0;\r\n  margin-right: 20px;\r\n  -webkit-transform: rotate(180deg);\r\n  -ms-transform: rotate(180deg);\r\n  transform: rotate(180deg); }\r\n\r\n.progress-animated {\r\n  -webkit-animation-duration: 5s;\r\n  -webkit-animation-name: myanimation;\r\n  -webkit-transition: 5s all;\r\n  animation-duration: 5s;\r\n  animation-name: myanimation;\r\n  -o-transition: 5s all;\r\n  transition: 5s all; }\r\n\r\n@-webkit-keyframes myanimation {\r\n  from {\r\n    width: 0; } }\r\n\r\n@keyframes myanimation {\r\n  from {\r\n    width: 0; } }",
                    "styleUrl": "./progress.component.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "getProgreso1": {
                    "name": "getProgreso1",
                    "getSignature": {
                        "name": "getProgreso1",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                },
                "getProgreso2": {
                    "name": "getProgreso2",
                    "getSignature": {
                        "name": "getProgreso2",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                }
            },
            "templateData": "<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Avance tratamiento neurologia</h4>\r\n        <div class=\"progress m-t-20\">\r\n          <div\r\n            class=\"progress-bar bg-primary progress-bar-striped active\"\r\n            style=\"height: 5px\"\r\n            [style.width]=\"getProgreso1\"\r\n            role=\"progressbar\"\r\n          >\r\n            <span class=\"sr-only\">85% Complete (success)</span>\r\n          </div>\r\n        </div>\r\n        <h4 class=\"card-title\">Avance tratamiento psicologia</h4>\r\n        <div class=\"progress m-t-20\">\r\n          <div\r\n            class=\"progress-bar bg-info progress-bar-striped active\"\r\n            style=\"height: 5px\"\r\n            [style.width]=\"getProgreso2\"\r\n            role=\"progressbar\"\r\n          >\r\n            <span class=\"sr-only\">85% Complete (success)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-increaser (valor)=\"progreso1 = $event\" [valor]=\"progreso1\">\r\n        </app-increaser>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-increaser\r\n          (valor)=\"progreso2 = $event\"\r\n          [valor]=\"progreso2\"\r\n          [btnClass]=\"'btn btn-info'\"\r\n        >\r\n        </app-increaser>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PromisesComponent",
            "id": "component-PromisesComponent-81a6ffbd552bc449497cdd62d69c3f4530b7537d7f6105e1aa27865cb730e4343190b47ada62510b812c83a5d93890519b97543202d75f5c5c9fb75bb2a690b0",
            "file": "src/app/pages/promises/promises.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-promises",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./promises.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-promises',\r\n  templateUrl: './promises.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class PromisesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getUsers().then( users => {\r\n      console.log(users);\r\n    })\r\n    // const promise = new Promise( (resolve, reject) => {\r\n    //   if ( false ){ //condicional para manejo de errores, sin manejar la excepcion aparece un error de uncaught promise\r\n    //     resolve('Hello world');\r\n    //   } else {\r\n    //     reject('Algo salio mal');\r\n    //   }\r\n    // });\r\n\r\n    // promise.then( (message) =>{ //este callback es asincrono. si le pongo message, este arg me recibe el resolve\r\n    //   console.log(message)\r\n    // })\r\n    // .catch(err => console.log('error en mi promesa', err)) //manejo de error: lo captura (catch) y le concatena lo que hay en reject\r\n    // console.log('Fin del Init');\r\n  }\r\n\r\n  getUsers(){\r\n  // si creo una nueva promesa puedo ponerle return para que devuelva resolve (res)\r\n  return  new Promise (res => {\r\n      \r\n      fetch('https://reqres.in/api/user')\r\n        .then( resp => resp.json())\r\n        .then( body => console.log(body.data));\r\n    }); \r\n      \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>Tus predicciones</p>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-52f753674640a084e056d575dc0a01884d27d168985ff627ee26ae2cdaa0ee005310bc92dbfe9f11204f0e955ea916611b6cce6d42d75ad337357637e8c4a8d7",
            "file": "src/app/auth/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formSubmitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "registerForm",
                    "defaultValue": "this.fb.group(\r\n    {\r\n      name: ['elcastri', Validators.required],\r\n      email: ['elcastri1@hotmail.com', [Validators.required, Validators.email]],\r\n      password: ['elcastri', Validators.required],\r\n      password2: ['elcastri', Validators.required],\r\n      terms: [true, Validators.required],\r\n    },\r\n    {\r\n      validators: this.matchingPasswords('password', 'password2'),\r\n    }\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "acceptTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "matchingPasswords",
                    "args": [
                        {
                            "name": "pass1Name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pass2Name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(formGroup: FormGroup) => void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pass1Name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pass2Name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notValidField",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notValidPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserService } from './../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\n  public formSubmitted = false;\r\n\r\n  public registerForm: any = this.fb.group(\r\n    {\r\n      name: ['elcastri', Validators.required],\r\n      email: ['elcastri1@hotmail.com', [Validators.required, Validators.email]],\r\n      password: ['elcastri', Validators.required],\r\n      password2: ['elcastri', Validators.required],\r\n      terms: [true, Validators.required],\r\n    },\r\n    {\r\n      validators: this.matchingPasswords('password', 'password2'),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  createUser() {\r\n    this.formSubmitted = true; //Confirmo el envio del formulario\r\n    // console.log(this.registerForm.value)\r\n    console.log(this.registerForm);\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    // Posting sign up body values\r\n    this.userService.createUser(this.registerForm.value).subscribe({\r\n      next: (resp) => {\r\n        this.router.navigateByUrl('/');\r\n      },\r\n      error: (err) => {\r\n        Swal.fire('Error', err.error.msg, 'error');\r\n      },\r\n    });\r\n  }\r\n\r\n  notValidField(field: string): boolean {\r\n    if (this.registerForm.get(field).invalid && this.formSubmitted) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  notValidPassword() {\r\n    const pass1 = this.registerForm.get('password').value;\r\n    const pass2 = this.registerForm.get('password2').value;\r\n\r\n    if (pass1 !== pass2 && this.formSubmitted) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  acceptTerms() {\r\n    return !this.registerForm.get('terms').value && this.formSubmitted; //si el check de terms esta en false y ya se presiono submit...\r\n  }\r\n  matchingPasswords(pass1Name: string, pass2Name: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const pass1Control: any = formGroup.get(pass1Name);\r\n      const pass2Control: any = formGroup.get(pass2Name);\r\n\r\n      if (pass1Control.value === pass2Control.value) {\r\n        pass2Control.setErrors(null);\r\n      } else {\r\n        pass2Control.setErrors({ doesNotMatch: true });\r\n      }\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\r\nTemplate Name: Admin pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*\r\nTemplate Name: Admin Pro Admin\r\nAuthor: Wrappixel\r\nEmail: niravjoshi87@gmail.com\r\nFile: scss\r\n*/\r\n/*Theme Colors*/\r\n/*bootstrap Color*/\r\n/*Light colors*/\r\n/*Normal Color*/\r\n/*Extra Variable*/\r\n/*******************\r\nLogin register and recover password Page\r\n******************/\r\n.login-register {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 10% 0;\r\n    position: fixed; }\r\n  \r\n  .login-box {\r\n    width: 400px;\r\n    margin: 0 auto; }\r\n    .login-box .footer {\r\n      width: 100%;\r\n      left: 0px;\r\n      right: 0px; }\r\n    .login-box .social {\r\n      display: block;\r\n      margin-bottom: 30px; }\r\n  \r\n  #recoverform {\r\n    display: none; }\r\n  \r\n  .login-sidebar {\r\n    padding: 0px;\r\n    margin-top: 0px; }\r\n    .login-sidebar .login-box {\r\n      right: 0px;\r\n      position: absolute;\r\n      height: 100%; }\r\n  ",
                    "styleUrl": "./register.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<section\r\n  id=\"wrapper\"\r\n  class=\"login-register login-sidebar\"\r\n  style=\"background-image: url(../assets/images/background/login-register.jpg)\"\r\n>\r\n  <div class=\"login-box card\">\r\n    <div class=\"card-body\">\r\n      <form\r\n        class=\"form-horizontal form-material\"\r\n        id=\"loginform\"\r\n        autocomplete= \"off\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"createUser()\"\r\n      >\r\n        <a href=\"javascript:void(0)\" class=\"text-center db\"\r\n          ><img src=\"../assets/images/logo-icon.png\" alt=\"Home\" /><br /><img\r\n            src=\"../assets/images/logo-text.png\"\r\n            alt=\"Home\"\r\n        /></a>\r\n        <h3 class=\"box-title m-t-40 m-b-0\">Register Now</h3>\r\n        <small>Create your account and enjoy</small>\r\n        <div class=\"form-group m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              formControlName=\"name\"\r\n              \r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              required=\"\"\r\n              placeholder=\"Email\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"password\"\r\n              required=\"\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              formControlName=\"password2\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"checkbox checkbox-primary p-t-0\">\r\n              <input \r\n              id=\"checkbox-signup\"\r\n              type=\"checkbox\" \r\n              formControlName=\"terms\" />\r\n\r\n              <label for=\"checkbox-signup\">\r\n                I agree to all <a href=\"#\">Terms</a></label\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col text-danger\">\r\n                <p *ngIf=\"notValidField('name')\">*name is required</p>\r\n                <p *ngIf=\"notValidField('email')\">*email is required and must be valid</p>\r\n                <p *ngIf=\"notValidPassword()\">*Passwords must have the same values</p>\r\n                <!-- <p *ngIf=\"!registerForm.get('terms').value\">Please accept terms</p> -->\r\n                <p *ngIf=\"acceptTerms()\">*Please accept terms</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group text-center m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <button\r\n              class=\"\r\n                btn btn-info btn-lg btn-block\r\n                text-uppercase\r\n                waves-effect waves-light\r\n              \"\r\n              type=\"submit\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group m-b-0\">\r\n          <div class=\"col-sm-12 text-center\">\r\n            <p>\r\n              Already have an account?\r\n              <a routerLink=\"/login\" class=\"text-info m-l-5\"\r\n                ><b>Sign In</b></a\r\n              >\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- ============================================================== -->\r\n<!-- End Wrapper -->\r\n<!-- ============================================================== -->\r\n"
        },
        {
            "name": "RxjsComponent",
            "id": "component-RxjsComponent-6c3825b86ff0149146fd9df08507f60e2b3b9d67cb897c48ef7e46787baf9f0214ac35402dc0aeaaf8ec03aee233150adedaa68bc97ad19b8b94a971b6ea0616",
            "file": "src/app/pages/rxjs/rxjs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rxjs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./rxjs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "intervalSubs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retornaObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "returnInterval",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\r\nimport { Observable, interval, Subscription } from 'rxjs';\r\nimport { retry, take, map, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-rxjs',\r\n  templateUrl: './rxjs.component.html',\r\n  styles: [],\r\n})\r\nexport class RxjsComponent implements OnDestroy {\r\n  public intervalSubs: Subscription;\r\n  constructor() {\r\n    // this.retornaObservable().pipe(retry(1)).subscribe({\r\n\r\n    //   next: (value) => console.log('subs:', value),\r\n    //   error: (e) => console.warn('Error', e),\r\n    //   complete: () => console.info('complete')\r\n    // });\r\n    this.intervalSubs = this.returnInterval().subscribe(console.log);\r\n    this.returnInterval().subscribe();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.intervalSubs.unsubscribe();\r\n  }\r\n\r\n  returnInterval(): Observable<number> {\r\n    return interval(500).pipe(\r\n      map((value) => value + 1),\r\n      filter((value) => (value % 2 == 0 ? true : false)),\r\n      take(10)\r\n    );\r\n  }\r\n  retornaObservable(): Observable<number> {\r\n    let i = -1;\r\n\r\n    const obs$ = new Observable<number>((observer) => {\r\n      const sub = setInterval(() => {\r\n        i++;\r\n        observer.next(i);\r\n\r\n        if (i === 5) {\r\n          clearInterval(sub);\r\n          observer.complete();\r\n        }\r\n        if (i === 2) {\r\n          observer.error('i llegó a 2');\r\n        }\r\n      }, 1000);\r\n    });\r\n    return obs$;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<p>Proximas citas</p>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-266bed66e067a7645ca28cb1cba03364f43e5573ccc0045d352bf059105cd3c9dd7b3bc2d4770477e0aa0bddebff7315196c56891b2aece2211e6989effeca65",
            "file": "src/app/pages/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "doctors",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Doctor[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hospitals",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hospital[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "globalSearch",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\nimport { Hospital } from 'src/app/models/hospital.model';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { SearchsService } from 'src/app/services/searchs.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styles: [],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  public users: User[] = [];\r\n  public hospitals: Hospital[] = [];\r\n  public doctors: Doctor[] = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private searchsService: SearchsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(({ pattern }) =>\r\n      this.globalSearch(pattern)\r\n    );\r\n  }\r\n  globalSearch(pattern: string) {\r\n    this.searchsService.globalSearch(pattern).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.users = res.users;\r\n      this.hospitals = res.hospitals;\r\n      this.doctors = res.doctors;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchsService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchsService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row animated fadeIn fast\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <div class=\"cad-body\">\r\n        <h3>Users</h3>\r\n        <div class=\"alert alert-info\" *ngIf=\"users.length === 0\">\r\n          <h4>search pattern has no match in the database</h4>\r\n        </div>\r\n        <div class=\"table-responsive\" *ngIf=\"users.length > 0\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Avatar</th>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let user of users\">\r\n                <td>\r\n                  <img [src]=\"user.img | image: 'users'\" class=\"w-75\" alt=\"\" />\r\n                </td>\r\n                <td>{{ user.name }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <div class=\"cad-body\">\r\n        <h3>Doctors</h3>\r\n        <div class=\"alert alert-info\" *ngIf=\"doctors.length === 0\">\r\n          <h4>search pattern has no match in the database</h4>\r\n        </div>\r\n        <div class=\"table-responsive\" *ngIf=\"doctors.length > 0\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Avatar</th>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let doctor of doctors\" class=\"animated fadeIn fast\">\r\n                <td>\r\n                  <img\r\n                    [src]=\"doctor.img | image: 'doctors'\"\r\n                    class=\"w-75\"\r\n                    alt=\"\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <a [routerLink]=\"['/dashboard/doctor', doctor._id]\">\r\n                    {{ doctor.name }}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <div class=\"cad-body\">\r\n        <h3>Hospitals</h3>\r\n        <div class=\"alert alert-info\" *ngIf=\"hospitals.length === 0\">\r\n          <h4>search pattern has no match in the database</h4>\r\n        </div>\r\n        <div class=\"table-responsive\" *ngIf=\"hospitals.length > 0\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Avatar</th>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let hospital of hospitals\"\r\n                class=\"animated fadeIn fast\"\r\n              >\r\n                <td>\r\n                  <img\r\n                    [src]=\"hospital.img | image: 'hospitals'\"\r\n                    class=\"w-75\"\r\n                    alt=\"\"\r\n                  />\r\n                </td>\r\n                <td>{{ hospital.name }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-233138cfb604d1b285eebfeea21b2af1447cb24822d4970abb45044c98d68251371ec41f0cc480343e236a7e53a595042a9eae0df1b7eabcc149023308a5ca4f",
            "file": "src/app/shared/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sidebarService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { SidebarService } from 'src/app/services/sidebar.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styles: [],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  public user: User;\r\n\r\n  constructor(\r\n    public sidebarService: SidebarService,\r\n    private userService: UserService\r\n  ) {\r\n    this.user = userService.user;\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sidebarService",
                        "type": "SidebarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "sidebarService",
                        "type": "SidebarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Left Sidebar - style you can find in sidebar.scss  -->\r\n<!-- ============================================================== -->\r\n<aside class=\"left-sidebar\">\r\n  <!-- Sidebar scroll-->\r\n  <div class=\"scroll-sidebar\">\r\n    <!-- Sidebar navigation-->\r\n    <nav class=\"sidebar-nav\">\r\n      <ul id=\"sidebarnav\">\r\n        <li class=\"user-profile\">\r\n          <a\r\n            class=\"has-arrow waves-effect waves-dark w-100\"\r\n            href=\"#\"\r\n            aria-expanded=\"false\"\r\n            ><img [src]=\"user.imageUrl\" class=\"img\" alt=\"user\" /><span\r\n              class=\"hide-menu\"\r\n              >{{ user.name }}\r\n            </span></a\r\n          >\r\n          <ul aria-expanded=\"false\" class=\"collapse\">\r\n            <li>\r\n              <a routerLinkActive=\"active\" routerLink=\"./profile\"\r\n                >My Profile\r\n              </a>\r\n            </li>\r\n            <li><a href=\"javascript:void()\">My Balance</a></li>\r\n            <li><a href=\"javascript:void()\">Inbox</a></li>\r\n            <li><a routerLink=\"account-settings\">Account Setting</a></li>\r\n            <li><a routerLink=\"/login\">Logout</a></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"nav-devider\"></li>\r\n        <li class=\"nav-small-cap\">PERSONAL</li>\r\n        <li *ngFor=\"let item of sidebarService.menu\">\r\n          <a\r\n            class=\"has-arrow waves-effect waves-dark\"\r\n            href=\"#\"\r\n            aria-expanded=\"false\"\r\n            ><i [class]=\"item.icon\"></i\r\n            ><span class=\"hide-menu\">\r\n              {{ item.title }}\r\n              <span class=\"label label-rouded label-themecolor pull-right\"\r\n                >{{ item.submenu.length }}\r\n              </span></span\r\n            ></a\r\n          >\r\n          <ul aria-expanded=\"false\" class=\"collapse\">\r\n            <li *ngFor=\"let subMenuItem of item.submenu\">\r\n              <a\r\n                [routerLink]=\"subMenuItem.url\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                >{{ subMenuItem.title }}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <!-- End Sidebar navigation -->\r\n  </div>\r\n  <!-- End Sidebar scroll-->\r\n</aside>\r\n<!-- ============================================================== -->\r\n<!-- End Left Sidebar - style you can find in sidebar.scss  -->\r\n"
        },
        {
            "name": "UsersComponent",
            "id": "component-UsersComponent-b762814a9ce0e7d443c4b442e1147d73de75162023e696006333678258d059cf2ab711618a65d2bdc6cdae42d83c031b3dcdce056823de804a57741ff08fb714",
            "file": "src/app/pages/mainteneance/users/users.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-users",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./users.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "since",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalUsers",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "usersTemp",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changePage",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeRole",
                    "args": [
                        {
                            "name": "updatedUser",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "updatedUser",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pattern",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { User } from 'src/app/models/user.model';\r\n\r\nimport { delay } from 'rxjs';\r\nimport { Hospital } from 'src/app/models/hospital.model';\r\nimport { ModalImageService } from 'src/app/services/modal-image.service';\r\nimport { SearchsService } from 'src/app/services/searchs.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: [],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  public totalUsers: number = 0;\r\n  public users: User[] = [];\r\n  public usersTemp: User[] = [];\r\n  public since: number = 0;\r\n  public loading: boolean = true;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private searchService: SearchsService,\r\n    private modalImageService: ModalImageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n\r\n    this.modalImageService.newImg\r\n      .pipe(delay(100))\r\n      .subscribe((img) => this.loadUsers());\r\n  }\r\n\r\n  loadUsers() {\r\n    this.loading = true;\r\n    this.userService.loadUsers(this.since).subscribe(({ total, user }) => {\r\n      this.totalUsers = total;\r\n      this.users = user;\r\n      this.usersTemp = user;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  changePage(value: number) {\r\n    this.loading = true;\r\n    this.since += value;\r\n    if (this.since < 0) {\r\n      this.since = 0;\r\n    } else if (this.since >= this.totalUsers) {\r\n      this.since -= value;\r\n    }\r\n    this.loadUsers();\r\n  }\r\n\r\n  search(pattern: string) {\r\n    if (pattern.length === 0) {\r\n      return (this.users = this.usersTemp);\r\n    }\r\n    this.searchService.search('users', pattern).subscribe((resp) => {\r\n      this.users = resp as User[];\r\n    });\r\n  }\r\n  deleteUser(user: User) {\r\n    if (user.uid === this.userService.uid) {\r\n      return Swal.fire('Error', 'Your access is blocked', 'error');\r\n    }\r\n\r\n    Swal.fire({\r\n      title: 'Do you want to delete this user?',\r\n      text: `You are about to delete ${user.name}`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.userService.deleteUser(user).subscribe((res) => {\r\n          this.loadUsers();\r\n          Swal.fire(\r\n            'User has been deleted',\r\n            `${user.name} has been deleted successfully`,\r\n            'success'\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n  changeRole(updatedUser: User) {\r\n    this.userService.saveUser(updatedUser).subscribe((res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  openModal(user: User) {\r\n    console.log(user);\r\n    this.modalImageService.openModal('users', user.uid, user.img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchService",
                        "type": "SearchsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalImageService",
                        "type": "ModalImageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row animated fadeIn fast\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search user...\"\r\n          (keyup)=\"search(txtpattern.value)\"\r\n          #txtpattern\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"loading\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"alert alert-info text-center\" role=\"alert\">\r\n          <h4 class=\"alert-heading\">Loading</h4>\r\n          <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\r\n          <p>Please wait...</p>\r\n          <p class=\"mb-0\"></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"!loading\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Signed users ({{ totalUsers }})</h4>\r\n        <h6 class=\"card-subtitle\">Signed up users in the app</h6>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Avatar</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Role</th>\r\n                <th>Auth</th>\r\n                <th class=\"text-nowrap\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let user of users\">\r\n                <td class=\"text-center\">\r\n                  <img\r\n                    [src]=\"user.imageUrl\"\r\n                    atl=\"Avatar\"\r\n                    class=\"avatar cursor\"\r\n                    (click)=\"openModal(user)\"\r\n                  />\r\n                </td>\r\n                <td>{{ user.email }}</td>\r\n                <td>{{ user.name }}</td>\r\n                <td>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"user.role\"\r\n                    (change)=\"changeRole(user)\"\r\n                  >\r\n                    <option value=\"ADMIN_ROLE\">Admin</option>\r\n                    <option value=\"USER_ROLE\">User</option>\r\n                  </select>\r\n                </td>\r\n                <!-- <td>{{ user.name }}</td> -->\r\n                <td>\r\n                  <span *ngIf=\"user.google\" class=\"label label-danger\"\r\n                    >Google</span\r\n                  >\r\n                  &nbsp;\r\n                  <span *ngIf=\"!user.google\" class=\"label label-info\"\r\n                    >Email</span\r\n                  >\r\n                </td>\r\n                <td class=\"text-nowrap text-center\">\r\n                  <a href=\"#\" data-toggle=\"tooltip\" data-original-title=\"Edit\">\r\n                    <i class=\"fa fa-pencil text-inverse m-r-10\"></i>\r\n                  </a>\r\n                  <a\r\n                    data-toggle=\"tooltip\"\r\n                    data-original-title=\"Delete\"\r\n                    (click)=\"deleteUser(user)\"\r\n                    class=\"cursor\"\r\n                  >\r\n                    <i class=\"fa fa-close text-danger\"></i>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div *ngIf=\"txtpattern.value.length === 0\">\r\n            <button (click)=\"changePage(-5)\" class=\"btn btn-secondary\">\r\n              Previous\r\n            </button>\r\n            &nbsp;\r\n            <button (click)=\"changePage(+5)\" class=\"btn btn-secondary\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-225f0218332e7d86bf1fbb1c35690c1d4b1a6b1828f847de55ecea08519831b5c8a6dd91bd2327d5447fcb065119455c45e40d9dc2a3b3ed3651ae819591cd64",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n// Modules\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NotfoundComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    PagesModule,\r\n    SharedModule,\r\n    AuthModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NotfoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-2de727ad68faf209f92814026bf8fc86dc219ee981602630586e5207a57f56a5d576bc0f9e3d7094beb0fab1e025674c644bc66e84f461e5aab7ace4b094ab7d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n//Modules\r\nimport { PagesRoutingModule } from './pages/pages.routing';\r\nimport { AuthRoutingModule } from './auth/auth.routing';\r\n\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\n\r\nconst routes: Routes = [\r\n  // path:'/dashboard' pagesRouting\r\n  // path:'/auth' authRouting\r\n  // path:'/dashboard' pagesRouting\r\n  // path:'/dashboard' pagesRouting\r\n  // !Rutas vacias redirigen al /dashboard\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  //! Rutas no encontradas redirigen a component not found\r\n  { path: '**', component: NotfoundComponent }, //Errores de direccion URL not page found\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forRoot(routes), //Solo rutas principales. forchild rutas hijas\r\n    PagesRoutingModule,\r\n    AuthRoutingModule,\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        },
                        {
                            "name": "PagesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-fa364aa1131dfb92a49fb6bbc7cea666600804160fe7e9e3f82892d3e29c29ff0b9918dec882e85a30fee6b4a63f12978579d4ebe6cb807f1ebf3f45a487d2c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {RouterModule } from '@angular/router';\r\nimport {HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst AUTH_COMPONENT = [\r\n  LoginComponent,\r\n  RegisterComponent  \r\n\r\n]; \r\n\r\n@NgModule({\r\n  declarations: [AUTH_COMPONENT\r\n  ],\r\n  exports: [\r\n    AUTH_COMPONENT\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-2ffeea162684cf09d4ba5fe0f79817a39d4846fc3cc5497d8e572c027904b779ac1de7f63dd45f79e14ef1b221f53f9d15a8ddda1abe8fa8cdd3a706acb96cd8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n        \r\n        { path: 'register', component: RegisterComponent },\r\n        { path: 'login', component: LoginComponent },\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule{}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChildRoutesModule",
            "id": "module-ChildRoutesModule-76f1d422cf122194191986619cb0330b0f533719fa91cb8b74110bc08ebcffa7940d0e55c7c8b9f9ded660df0fa97f25fddc1eea488e131f01f046466a34dec0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/child-routes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\n\r\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../guards/admin.guard';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { Grafica1Component } from './grafica1/grafica1.component';\r\nimport { DoctorComponent } from './mainteneance/doctors/doctor.component';\r\nimport { DoctorsComponent } from './mainteneance/doctors/doctors.component';\r\nimport { HospitalsComponent } from './mainteneance/hospitals/hospitals.component';\r\nimport { UsersComponent } from './mainteneance/users/users.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { PromisesComponent } from './promises/promises.component';\r\nimport { RxjsComponent } from './rxjs/rxjs.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst childRoutes: Routes = [\r\n  { path: '', component: DashboardComponent, data: { title: 'Dashboard' } },\r\n  {\r\n    path: 'progress',\r\n    component: ProgressComponent,\r\n    data: { title: 'Progress' },\r\n  },\r\n  {\r\n    path: 'chart1',\r\n    component: Grafica1Component,\r\n    data: { title: 'Charts' },\r\n  },\r\n  {\r\n    path: 'account-settings',\r\n    component: AccountSettingsComponent,\r\n    data: { title: 'Theme' },\r\n  },\r\n  {\r\n    path: 'search/:pattern',\r\n    component: SearchComponent,\r\n    data: { title: 'Searchs' },\r\n  },\r\n  {\r\n    path: 'promises',\r\n    component: PromisesComponent,\r\n    data: { title: 'Promises' },\r\n  },\r\n  { path: 'rxjs', component: RxjsComponent, data: { title: 'Rxjs' } },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    data: { title: 'My profile' },\r\n  },\r\n  //Paths vacios redirect to dashboard\r\n  // Mainteneance\r\n  // Rutas de Admin\r\n  {\r\n    path: 'users',\r\n    canActivate: [AdminGuard],\r\n    component: UsersComponent,\r\n    data: { title: 'Users' },\r\n  },\r\n  // {\r\n  //   path: 'hospitals',\r\n  //   component: HospitalsComponent,\r\n  //   data: { title: 'Hospitals' },\r\n  // },\r\n  // {\r\n  //   path: 'doctors',\r\n  //   component: DoctorsComponent,\r\n  //   data: { title: 'Doctors' },\r\n  // },\r\n  // {\r\n  //   path: 'doctor/:id',\r\n  //   component: DoctorComponent,\r\n  //   data: { title: 'Doctor' },\r\n  // },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(childRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ChildRoutesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-e7300ecf9883b34486a38db4af70f2ad061704a43f3b5b9abe45452facce232dc4880afca885d805fd09ae4266fbfdb46c96884da401cf99a5cc9232524fdddb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IncreaserComponent } from './increaser/increaser.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DonaComponent } from './dona/dona.component';\r\nimport { ChartsModule } from 'ng2-charts'; // Use 'ChartsModule' here\r\nimport { ModalImageComponent } from './modal-image/modal-image.component';\r\n\r\n@NgModule({\r\n  declarations: [IncreaserComponent, DonaComponent, ModalImageComponent],\r\n  exports: [IncreaserComponent, DonaComponent, ModalImageComponent],\r\n  imports: [CommonModule, FormsModule, ChartsModule], // Use 'ChartsModule' here\r\n})\r\nexport class ComponentsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DonaComponent"
                        },
                        {
                            "name": "IncreaserComponent"
                        },
                        {
                            "name": "ModalImageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DonaComponent"
                        },
                        {
                            "name": "IncreaserComponent"
                        },
                        {
                            "name": "ModalImageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "id": "module-PagesModule-b9fb1d7884f720b64142d9bce0595eb50318b5f4a03b11026ca9a8cf756102fd3d20d5e6859f7384e89347ee93a8aab45053d6ee8d510d2baa713275c85e97df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\n//Created modules\r\n\r\nimport { PipesModule } from '../pipes/pipes.module';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { Grafica1Component } from './grafica1/grafica1.component';\r\nimport { PagesComponent } from './pages.component';\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\r\nimport { PromisesComponent } from './promises/promises.component';\r\nimport { RxjsComponent } from './rxjs/rxjs.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { UsersComponent } from './mainteneance/users/users.component';\r\nimport { HospitalsComponent } from './mainteneance/hospitals/hospitals.component';\r\nimport { DoctorsComponent } from './mainteneance/doctors/doctors.component';\r\nimport { DoctorComponent } from './mainteneance/doctors/doctor.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    ProgressComponent,\r\n    Grafica1Component,\r\n    PagesComponent,\r\n    AccountSettingsComponent,\r\n    PromisesComponent,\r\n    RxjsComponent,\r\n    ProfileComponent,\r\n    UsersComponent,\r\n    HospitalsComponent,\r\n    DoctorsComponent,\r\n    DoctorComponent,\r\n    SearchComponent,\r\n  ],\r\n\r\n  exports: [\r\n    DashboardComponent,\r\n    ProgressComponent,\r\n    Grafica1Component,\r\n    PagesComponent,\r\n    AccountSettingsComponent,\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PipesModule,\r\n  ],\r\n})\r\nexport class PagesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountSettingsComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "DoctorComponent"
                        },
                        {
                            "name": "DoctorsComponent"
                        },
                        {
                            "name": "Grafica1Component"
                        },
                        {
                            "name": "HospitalsComponent"
                        },
                        {
                            "name": "PagesComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProgressComponent"
                        },
                        {
                            "name": "PromisesComponent"
                        },
                        {
                            "name": "RxjsComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "UsersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountSettingsComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "Grafica1Component"
                        },
                        {
                            "name": "PagesComponent"
                        },
                        {
                            "name": "ProgressComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesRoutingModule",
            "id": "module-PagesRoutingModule-d31c08409765d90cef61447bf71bbf8bb7e34a0d08c9cec7da6ede2bc30d895fdbdce6b2babfc40b4a4b509c8d7cd1556f4a15ace297ab5854b18724f674f9df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages.routing.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\nimport { PagesComponent } from './pages.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: PagesComponent,\r\n    canActivate: [AuthGuard],\r\n    canLoad: [AuthGuard],\r\n    loadChildren: () =>\r\n      \"import('./child-routes.module').then((m) => m.ChildRoutesModule)\",\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PipesModule",
            "id": "module-PipesModule-827c81c16d6f707ba64158eb0eea5a9db682fcdebbb3f410ba2bc4793a610c0a6edb21eba5f7377aabe789607236082df8dad30df44ae9b371c7dc0bcdea625b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pipes/pipes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ImagePipe } from './image.pipe';\r\n\r\n@NgModule({\r\n  declarations: [ImagePipe],\r\n  exports: [ImagePipe],\r\n})\r\nexport class PipesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ImagePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ImagePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-8a54321991f77bb775754ccb0d26be8acb4c3af6f7f839c9f97e6b52ad8dae37b37e093f0520a3e8ec4e12bcb4fe3e00a67152e199176740d11897afff0ac509",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst SHARED_COMPONENT = [\r\n  BreadcrumbsComponent,\r\n  SidebarComponent,\r\n  HeaderComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SHARED_COMPONENT],\r\n\r\n  exports: [SHARED_COMPONENT],\r\n\r\n  imports: [CommonModule, RouterModule, FormsModule],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BreadcrumbsComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AUTH_COMPONENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  LoginComponent,\r\n  RegisterComponent  \r\n\r\n]"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/models/user.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pipes/image.pipe.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/doctor.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/file-upload.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/hospital.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/modal-image.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/searchs.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "base_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.base_url"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  base_url: 'https://backend-hospital-castri.herokuapp.com/api',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  base_url: 'http://localhost:3000/api'\r\n}"
            },
            {
                "name": "gapi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "gapi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/login/login.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Header>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Page>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "SHARED_COMPONENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  BreadcrumbsComponent,\r\n  SidebarComponent,\r\n  HeaderComponent,\r\n]"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "customInitFunctions",
                "file": "src/app/pages/pages.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Header>",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Page>",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/auth/auth.module.ts": [
                {
                    "name": "AUTH_COMPONENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  LoginComponent,\r\n  RegisterComponent  \r\n\r\n]"
                }
            ],
            "src/app/models/user.model.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/models/user.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/pipes/image.pipe.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pipes/image.pipe.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/doctor.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/doctor.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/file-upload.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/file-upload.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/hospital.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/hospital.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/modal-image.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/modal-image.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/searchs.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/searchs.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                }
            ],
            "src/app/services/user.service.ts": [
                {
                    "name": "base_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.base_url"
                },
                {
                    "name": "gapi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  base_url: 'https://backend-hospital-castri.herokuapp.com/api',\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  base_url: 'http://localhost:3000/api'\r\n}"
                }
            ],
            "src/app/auth/login/login.component.ts": [
                {
                    "name": "gapi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/login/login.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Header>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Page>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "SHARED_COMPONENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  BreadcrumbsComponent,\r\n  SidebarComponent,\r\n  HeaderComponent,\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/pages/pages.component.ts": [
                {
                    "name": "customInitFunctions",
                    "file": "src/app/pages/pages.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Header>",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Page>",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/dashboard",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "component": "NotfoundComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/auth/auth.routing.ts",
                "module": "AuthRoutingModule",
                "children": [
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/pages/pages.routing.ts",
                "module": "PagesRoutingModule",
                "children": [
                    {
                        "path": "dashboard",
                        "component": "PagesComponent",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "canLoad": [
                            "AuthGuard"
                        ],
                        "loadChildren": "./child-routes.module#ChildRoutesModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "childRoutes",
                                        "filename": "src/app/pages/child-routes.module.ts",
                                        "module": "ChildRoutesModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "DashboardComponent",
                                                "data": {
                                                    "title": "Dashboard"
                                                }
                                            },
                                            {
                                                "path": "progress",
                                                "component": "ProgressComponent",
                                                "data": {
                                                    "title": "Progress"
                                                }
                                            },
                                            {
                                                "path": "chart1",
                                                "component": "Grafica1Component",
                                                "data": {
                                                    "title": "Charts"
                                                }
                                            },
                                            {
                                                "path": "account-settings",
                                                "component": "AccountSettingsComponent",
                                                "data": {
                                                    "title": "Theme"
                                                }
                                            },
                                            {
                                                "path": "search/:pattern",
                                                "component": "SearchComponent",
                                                "data": {
                                                    "title": "Searchs"
                                                }
                                            },
                                            {
                                                "path": "promises",
                                                "component": "PromisesComponent",
                                                "data": {
                                                    "title": "Promises"
                                                }
                                            },
                                            {
                                                "path": "rxjs",
                                                "component": "RxjsComponent",
                                                "data": {
                                                    "title": "Rxjs"
                                                }
                                            },
                                            {
                                                "path": "profile",
                                                "component": "ProfileComponent",
                                                "data": {
                                                    "title": "Myprofile"
                                                }
                                            },
                                            {
                                                "path": "users",
                                                "canActivate": [
                                                    "AdminGuard"
                                                ],
                                                "component": "UsersComponent",
                                                "data": {
                                                    "title": "Users"
                                                }
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ChildRoutesModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUTH_COMPONENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gapi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dona/dona.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/increaser/increaser.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IncreaserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-image/modal-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/admin.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AdminGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/load-users.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoadUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/login-form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/register-form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RegisterForm",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/doctor.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Doctor",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/doctor.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "_DoctorUser",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/hospital.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Hospital",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/hospital.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "_HospitalUser",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/models/user.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/notfound/notfound.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotfoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/account-settings/account-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/grafica1/grafica1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Grafica1Component",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/mainteneance/doctors/doctor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DoctorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/mainteneance/doctors/doctors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DoctorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/mainteneance/hospitals/hospitals.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HospitalsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/mainteneance/users/users.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/pages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/pages.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "customInitFunctions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/progress/progress.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/promises/promises.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PromisesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/rxjs/rxjs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RxjsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/image.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ImagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/image.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/doctor.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DoctorService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/doctor.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/file-upload.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FileUploadService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/file-upload.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/hospital.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HospitalService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/hospital.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/modal-image.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModalImageService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/modal-image.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/searchs.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SearchsService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/searchs.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/settings.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SettingsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/sidebar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SidebarService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "base_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gapi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/breadcrumbs/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SHARED_COMPONENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}